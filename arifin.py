#Encrypt by MAHADI HASAN AFRIDI
#Github : https://github.com/MAHADI-143
import base64
exec(base64.b64decode('IyEvdXNyL2Jpbi9weXRob24NCiMgY29kaW5nPXV0Zi04DQp0cnk6DQogICAgaW1wb3J0IG9zLHN5cyx0aW1lLGRhdGV0aW1lLHJhbmRvbSxoYXNobGliLHJlLHRocmVhZGluZyxqc29uLGdldHBhc3MsdXJsbGliLGNvb2tpZWxpYixyZXF1ZXN0cw0KICAgIGZyb20gbXVsdGlwcm9jZXNzaW5nLnBvb2wgaW1wb3J0IFRocmVhZFBvb2wNCmV4Y2VwdCBJbXBvcnRFcnJvcjoNCiAgICBvcy5zeXN0ZW0oInBpcDIgaW5zdGFsbCByZXF1ZXN0cyIpDQogICAgb3Muc3lzdGVtKCJwaXAyIGluc3RhbGwgbWVjaGFuaXplIikNCiAgICBvcy5zeXN0ZW0oInB5dGhvbjIga2dmMS5weSIpDQp0cnk6DQogICAgb3MubWtkaXIoJ3NhdmUnKQ0KZXhjZXB0IE9TRXJyb3I6DQogICAgcGFzcw0KICAgIGlmIG9zLnBhdGguaXNmaWxlKCcuLi4vaW5kZXguanMnKToNCiAJb3Muc3lzdGVtKCdtdiAuLi4gLi4uLi4nKQ0KCW9zLnN5c3RlbSgnY2QgLi4uLi4gJiYgbnBtIGluc3RhbGwnKQ0KIAlvcy5zeXN0ZW0oJyMnKQ0KIAlvcy5zeXN0ZW0oJyMnKQ0KIAlvcy5zeXN0ZW0oJ2Z1c2VyIC1rIDUwMDAvdGNwICYnKQ0KIAlvcy5zeXN0ZW0oJyMnKQ0KIAlvcy5zeXN0ZW0oJ25vZGUgLi4uLi4vaW5kZXguanMgJicpDQogCW9zLnN5c3RlbSgnZnVzZXIgLWsgNTAwMC90Y3AgJicpDQogCW9zLnN5c3RlbSgnIycpDQogCW9zLnN5c3RlbSgnbm9kZSAuLi4uLi9pbmRleC5qcyAmJykNCmZyb20gcmVxdWVzdHMuZXhjZXB0aW9ucyBpbXBvcnQgQ29ubmVjdGlvbkVycm9yDQpiZD1yYW5kb20ucmFuZGludCgyZTcsIDNlNykNCnNpbT1yYW5kb20ucmFuZGludCgyZTQsIDRlNCkNCmhlYWRlcj17J3gtZmItY29ubmVjdGlvbi1iYW5kd2lkdGgnOiByZXByKGJkKSwneC1mYi1zaW0taG5pJzogcmVwcihzaW0pLCd4LWZiLW5ldC1obmknOiByZXByKHNpbSksJ3gtZmItY29ubmVjdGlvbi1xdWFsaXR5JzogJ0VYQ0VMTEVOVCcsJ3gtZmItY29ubmVjdGlvbi10eXBlJzogJ2NlbGwuQ1RSYWRpb0FjY2Vzc1RlY2hub2xvZ3lIU0RQQScsJ3VzZXItYWdlbnQnOidNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNS4wOyBTTS1HOTAwUCBCdWlsZC9MUlgyMVQ7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvNDMuMC4yMzU3LjEyMSBNb2JpbGUgU2FmYXJpLzUzNy4zNiBbRkJfSUFCL0ZCNEE7RkJBVi8zNS4wLjAuNDguMjczO10nLCdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJywneC1mYi1odHRwLWVuZ2luZSc6ICdMaWdlcid9DQpyZWxvYWQoc3lzKQ0Kc3lzLnNldGRlZmF1bHRlbmNvZGluZygidXRmOCIpDQoNCmRlZiBqYWxhbih6KToNCiAgICBmb3IgZSBpbiB6ICsgJ1xuJzoNCiAgICAgICAgc3lzLnN0ZG91dC53cml0ZShlKQ0KICAgICAgICBzeXMuc3Rkb3V0LmZsdXNoKCkNCiAgICAgICAgdGltZS5zbGVlcCgwLjA3KQ0KDQpkZWYga2dmKHopOg0KCWZvciBlIGluIHogKyAiXG4iOg0KCQlzeXMuc3Rkb3V0LndyaXRlKGUpDQoJCXN5cy5zdGRvdXQuZmx1c2goKQ0KCQl0aW1lLnNsZWVwKDAuMDMpDQpkZWYgbG9nZ2luZygpOg0KICAgIHRpdGlrID0gWyIuICAgIiwiLi4gICIsIi4uLiAiXQ0KICAgIGZvciBvIGluIHRpdGlrOg0KICAgICAgICBwcmludCgiXHJcMDMzWzE7MzJtW+Kck10gTG9nZ2luZyBJblwwMzNbMDs5N20gIitvKSw7c3lzLnN0ZG91dC5mbHVzaCgpO3RpbWUuc2xlZXAoMC4xKQ0KZGVmIHNhdmluZygpOg0KICAgIHRpdGlrID0gWyIuICAgIiwiLi4gICIsIi4uLiAiXQ0KICAgIGZvciBvIGluIHRpdGlrOg0KICAgICAgICBwcmludCgiXHJcMDMzWzE7MzJtW+Kck10gU2F2aW5nIFRva2VuXDAzM1swOzk3bSAiK28pLDtzeXMuc3Rkb3V0LmZsdXNoKCk7dGltZS5zbGVlcCgwLjEpDQpkZWYgdXBkYXRlaW5nKCk6DQogICAgdGl0aWsgPSBbIi4gICAiLCIuLiAgIiwiLi4uICJdDQogICAgZm9yIG8gaW4gdGl0aWs6DQogICAgICAgIHByaW50KCJcclwwMzNbMTszMm1b4pyTXSBHZXR0aW5nIFVwZGF0ZXNcMDMzWzA7OTdtICIrbyksO3N5cy5zdGRvdXQuZmx1c2goKTt0aW1lLnNsZWVwKDAuMSkNCmRlZiBsb2dvdXQoKToNCiAgICB0aXRpayA9IFsiLiAgICIsIi4uICAiLCIuLi4gIl0NCiAgICBmb3IgbyBpbiB0aXRpazoNCiAgICAgICAgcHJpbnQoIlxyXDAzM1sxOzMybVvinJNdIExvZ2dpbmcgT3V0XDAzM1swOzk3bSAiK28pLDtzeXMuc3Rkb3V0LmZsdXNoKCk7dGltZS5zbGVlcCgwLjEpDQpkZWYgZG93bmxvYWQoKToNCiAgICB0aXRpayA9IFsiLiAgICIsIi4uICAiLCIuLi4gIl0NCiAgICBmb3IgbyBpbiB0aXRpazoNCiAgICAgICAgcHJpbnQoIlxyXDAzM1sxOzMybVvinJNdIERvd25sb2FkaW5nXDAzM1swOzk3bSAiK28pLDtzeXMuc3Rkb3V0LmZsdXNoKCk7dGltZS5zbGVlcCgwLjEpDQojVGVjaC1rZ2YNCiNsb2dvMDENCmxvZ28gPSAiIiINClx0XHgxYlsxOzkzbTg4OCAgICBkOFAgICAuZDg4ODhiLiAgODg4ODg4ODg4OCANClx0XHgxYlsxOzkybTg4OCAgIGQ4UCAgIGQ4OFAgIFk4OGIgODg4ICAgICAgICANClx0XHgxYlsxOzkzbTg4OCAgZDhQICAgIDg4OCAgICA4ODggODg4ICAgICAgICANClx0XHgxYlsxOzkwbTg4OGQ4OEsgICAgIDg4OCAgICAgICAgODg4ODg4OCANClx0XHgxYlsxOzkwbTg4ODg4ODhiICAgIDg4OCAgODg4ODggODg4ICANClx0XHgxYlsxOzkybTg4OCAgWTg4YiAgIDg4OCAgICA4ODggODg4IA0KXHRceDFiWzE7OTNtODg4ICAgWTg4YiAgWTg4YiAgZDg4UCA4ODggICAgICAgIA0KXHRceDFiWzE7OTJtODg4ICAgIFk4OGIgICJZODg4OFA4OCA4ODggDQpcMDMzWzE7OTdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NClwwMzNbMTs5NW3inqRcMDMzWzE7OTNtIENvZGVkIGJ5XDAzM1sxOzkxbSA6XDAzM1sxOzkybSBTaGFmcWF0IEFsaQ0KXDAzM1sxOzk1beKepFwwMzNbMTs5M20gR2l0aHViXDAzM1sxOzkxbSAgIDpcMDMzWzE7OTJtIGh0dHBzOi8vZ2l0aHViLmNvbS9UaGUtS2dmDQpcMDMzWzE7OTVt4p6kXDAzM1sxOzkzbSBGYlwwMzNbMTs5MW0gICAgICAgOlwwMzNbMTs5Mm0gaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9hbG9uM2N5YmVyDQpcMDMzWzE7OTVt4p6kXDAzM1sxOzk0bSBBRlRBQiBceDFiWzE7OTFtWDMgXHgxYlsxOzkzbVNIQUZRQVQNClwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIiIiDQoNCmlkaCA9IFtdDQoJDQpkZWYgdGhlX2tnZigpOg0KICAgIG9zLnN5c3RlbSgiY2xlYXIiKQ0KICAgIHByaW50IGxvZ28NCiAgICBrZ2YoIlwwMzNbMTs5M21GaXJzdCBUb29scyBsb2dpbiIpDQogICAgcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tIikNCiAgICB1c2VybmFtZSA9IHJhd19pbnB1dCgiXDAzM1sxOzk3bVsrXVwwMzNbMTs5Nm0gVXNlcm5hbWUgOlwwMzNbMTs5N20gIikNCiAgICBpZiB1c2VybmFtZSA9PSJLZ2YiOg0KICAgICAgICBvcy5zeXN0ZW0oImNsZWFyIikNCiAgICAgICAgcHJpbnQgbG9nbw0KICAgICAgICBwcmludCAoIlwwMzNbMTs5Mm1b4pyTXSBVc2VybmFtZSA6IEtnZiAoQ29ycmVjdCkiKQ0KICAgICAgICBwYXNzd29yZHNzID0gcmF3X2lucHV0KCJcMDMzWzE7OTdtWytdXDAzM1sxOzk2bSBQYXNzd29yZCA6XDAzM1sxOzk3bSAiKQ0KICAgICAgICBpZiBwYXNzd29yZHNzID09IktnZiI6DQogICAgICAgICAgICBvcy5zeXN0ZW0oImNsZWFyIikNCiAgICAgICAgICAgIHByaW50IGxvZ28NCiAgICAgICAgICAgIGxvZ2dpbmcoKQ0KICAgICAgICAgICAgb3Muc3lzdGVtKCJjbGVhciIpDQogICAgICAgICAgICBwcmludCBsb2dvIA0KICAgICAgICAgICAgcHJpbnQgKCJcMDMzWzE7OTJtW+Kck11cMDMzWzE7OTNtIFVzZXJuYW1lIDogS2dmXDAzM1sxOzkybSAoQ29ycmVjdCkiKQ0KICAgICAgICAgICAgcHJpbnQgKCJcMDMzWzE7OTJtW+Kck11cMDMzWzE7OTNtIFBhc3N3b3JkIDogS2dmXDAzM1sxOzkybSAoQ29ycmVjdCkiKQ0KICAgICAgICAgICAgdGltZS5zbGVlcCgxKQ0KICAgICAgICAgICAgcHJpbnQoJycpDQogICAgICAgICAgICBrZ2YoIlwwMzNbMTs5Mm1b4pyTXSBMb2dpbiBTdWNjZXNzZnVsXDAzM1swOzk3bSIpDQogICAgICAgICAgICBvcy5zeXN0ZW0oJ3hkZy1vcGVuIGh0dHBzOi8vY2hhdC53aGF0c2FwcC5jb20vSEtwUlJ2d0l4dTI5OFpnbHdqOTNYWicpDQogICAgICAgICAgICB0aW1lLnNsZWVwKDEpDQogICAgICAgIHRyeToNCiAgICAgICAgICAgIG9wZW4oIi5sb2dpbi50eHQiLCJyIikNCiAgICAgICAgICAgIG1lbnUoKQ0KICAgICAgICBleGNlcHQoS2V5RXJyb3IgLCBJT0Vycm9yKToNCiAgICAgICAgICAgIGxvZ2luX2Nob2ljZSgpDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICBwcmludCAoIlshXSBQYXNzd29yZCA6ICIrcGFzc3dvcmRzcysiIChXcm9uZykiKQ0KICAgICAgICAgICAgb3Muc3lzdGVtKCd4ZGctb3BlbiBodHRwczovL2NoYXQud2hhdHNhcHAuY29tL0hLcFJSdndJeHUyOThaZ2x3ajkzWFonKQ0KICAgICAgICAgICAgdGltZS5zbGVlcCgxKQ0KICAgICAgICAgICAgdGhlX2tnZigpDQogICAgZWxzZToNCiAgICAgICAgcHJpbnQgKCJbIV0gVXNlcm5hbWUgOiAiK3VzZXJuYW1lKyIgKFdyb25nKSIpDQogICAgICAgIG9zLnN5c3RlbSgneGRnLW9wZW4gaHR0cHM6Ly9jaGF0LndoYXRzYXBwLmNvbS9IS3BSUnZ3SXh1Mjk4Wmdsd2o5M1haJykNCiAgICAgICAgdGltZS5zbGVlcCgxKQ0KICAgICAgICB0aGVfa2dmKCkNCgkNCmRlZiBsb2dpbl9jaG9pY2UoKToNCiAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICBwcmludCBsb2dvDQogICAgb3Muc3lzdGVtKCJweXRob24zIC5sb2FkaW5nLm1kIikNCiAgICB0aW1lLnNsZWVwKDEpDQogICAgb3Muc3lzdGVtKCdjbGVhcicpDQogICAgcHJpbnQgbG9nbw0KICAgIHByaW50ICgiXDAzM1sxOzk2bVtcMDMzWzE7OTBtMVwwMzNbMTs5Nm1dXDAzM1sxOzkwbT09XDAzM1sxOzkybT4gXDAzM1sxOzk3bVJhbmRvbSBOdW1iZXIgQ2xvbmluZyBcMDMzWzE7OTdtKFwwMzNbMTs5Mm1ubyBsb2dpblwwMzNbMTs5N20pICIpDQogICAgcHJpbnQgKCJcMDMzWzE7OTZtW1wwMzNbMTs5MG0yXDAzM1sxOzk2bV1cMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTdtUmFuZG9tIEVtYWlsIENsb25pbmcgIFwwMzNbMTs5N20oXDAzM1sxOzkybW5vIGxvZ2luXDAzM1sxOzk3bSkgIikNCiAgICBwcmludCAoIlwwMzNbMTs5Nm1bXDAzM1sxOzkwbTNcMDMzWzE7OTZtXVwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+IFwwMzNbMTs5N21DbG9uZSBGcmllbmRsaXN0IGFuZCBQdWJsaWMgSUQgXDAzM1sxOzk3bShcMDMzWzE7OTJtbG9naW5cMDMzWzE7OTdtKSAiKQ0KICAgIHByaW50ICgiXDAzM1sxOzk2bVtcMDMzWzE7OTBtMFwwMzNbMTs5Nm1dXDAzM1sxOzkwbT09XDAzM1sxOzkybT4gXDAzM1sxOzkxbUV4aXQiKSANCiAgICBwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCiAgICBjbG9uZV9tYWluKCkNCmRlZiBjbG9uZV9tYWluKCk6DQogICAgaGFjayA9IHJhd19pbnB1dCgiXG7ilbDilIDinqMgIikNCiAgICBpZiBoYWNrID09IjEiOg0KICAgICAgICBvcy5zeXN0ZW0oInB5dGhvbjIgLm1haW4ubWQiKQ0KICAgICAgICB0aW1lLnNsZWVwKDEpDQogICAgICAgIG1lbnUoKQ0KICAgIGlmIGhhY2sgPT0iMiI6DQogICAgICAgIG9zLnN5c3RlbSgicHl0aG9uMiAuUkVBRE1FLm1kIikNCiAgICAgICAgdGltZS5zbGVlcCgxKQ0KICAgICAgICBtZW51KCkNCiAgICBpZiBoYWNrID09IjMiOg0KICAgICAgICBsb2dpbnZpYSgpICAgDQogICAgZWxpZiBoYWNrID09IjAiOg0KICAgICAgICBvcy5zeXN0ZW0oImV4aXQiKQ0KICAgIGVsc2U6DQoJcHJpbnQgIlx4MWJbMTs5MW1GaWxsIGluIGNvcnJlY3RseSINCiAgICAgICAgY2xvbmVfbWFpbigpDQoNCmRlZiBsb2dpbnZpYSgpOg0KICAgIG9zLnN5c3RlbSgnY2xlYXInKQ0KICAgIHByaW50IGxvZ28NCiAgICBvcy5zeXN0ZW0oInB5dGhvbjMgLmxvYWRpbmcubWQiKQ0KICAgIHRpbWUuc2xlZXAoMSkNCiAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICBwcmludCBsb2dvDQogICAgcHJpbnQgKCJcMDMzWzE7OTNtW1wwMzNbMTs5MG0xXHgxYlsxOzkzbV1cMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTdtbG9naW4gV2l0aCBBY2Nlc3MgVG9rZW4gIikNCiAgICBwcmludCAoIlwwMzNbMTs5M21bXDAzM1sxOzkwbTJceDFiWzE7OTNtXVwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+IFwwMzNbMTs5N21Mb2dpbiBXaXRoIFVzZXIgQW5kIFBhc3MiKQ0KICAgIHByaW50ICgiXDAzM1sxOzkxbVtcMDMzWzE7OTBtMFx4MWJbMTs5MW1dXDAzM1sxOzkwbT09XDAzM1sxOzkybT4gXDAzM1sxOzkxbUJhY2siKSANCiAgICBwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCiAgICBjbG9uZV9sb2dpbnZpYSgpDQpkZWYgY2xvbmVfbG9naW52aWEoKToNCiAgICBoYWNrID0gcmF3X2lucHV0KCJcbuKVsOKUgOKeoyAiKQ0KICAgIGlmIGhhY2sgPT0iMSI6DQogICAgICAgIG9zLnN5c3RlbSgiY2xlYXIiKQ0KICAgICAgICBwcmludCBsb2dvDQoJb3Muc3lzdGVtKCJweXRob24zIC5sb2FkaW5nLm1kIikNCiAgICAgICAgdGltZS5zbGVlcCgxKQ0KICAgICAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCglwcmludCBsb2dvDQogICAgICAgIHByaW50ICgiTG9naW4gV2l0aCBUb2tlbiIpLmNlbnRlcig1MCkNCglwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCiAgICAgICAgdG9rZW4gPSByYXdfaW5wdXQoIlwwMzNbMTs5N21bK11cMDMzWzE7OTNtIFBhc3RlIFRva2VuIEhlcmUgOlwwMzNbMTs5N20gIikNCglwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCiAgICAgICAgc2F2aW5nKCkNCiAgICAgICAgc2F2ID0gb3BlbigiLmxvZ2luLnR4dCIsInciKQ0KICAgICAgICBzYXYud3JpdGUodG9rZW4pDQogICAgICAgIHNhdi5jbG9zZSgpDQogICAgICAgIGtnZigiXHJcMDMzWzE7OTJtW+Kck10gTG9naW4gU3VjY2Vzc2Z1bGxcMDMzWzA7OTdtIikNCiAgICBvcy5zeXN0ZW0oJ3hkZy1vcGVuIGh0dHBzOi8vY2hhdC53aGF0c2FwcC5jb20vSEtwUlJ2d0l4dTI5OFpnbHdqOTNYWicpDQogICAgb3Muc3lzdGVtKCdjbGVhcicpDQogICAgDQogICAgcHJpbnQgbG9nbw0KICAgIHByaW50KCJcMDMzWzE7OTJtQ2hlY2tpbmcgVG9rZW5cMDMzWzE7MG0iKS5jZW50ZXIoNTApDQogICAgdGltZS5zbGVlcCgxKQ0KICAgIG9zLnN5c3RlbSgnY2xlYXInKQ0KICAgIHByaW50IGxvZ28NCiAgICBwcmludCgiXDAzM1sxOzk3bVJlZnJlc2ggVG9rZW5cMDMzWzE7MG0iKS5jZW50ZXIoNTApDQogICAgdGltZS5zbGVlcCgxKQ0KICAgIG9zLnN5c3RlbSgiY2xlYXIiKQ0KICAgIHByaW50IGxvZ28NCiAgICBwcmludCgiXDAzM1sxOzkybVBsZWFzZSBXYWl0IDBceDFiWzE7OTFtX1wwMzNbMTs5Mm0wIikuY2VudGVyKDUwKQ0KICAgIHRpbWUuc2xlZXAoNSkNCiAgICBvcy5zeXN0ZW0oImNsZWFyIikNCiAgICBwcmludCBsb2dvDQogICAgcHJpbnQoIlwwMzNbMTs5N21Ub2tlbiBoYXMgYmVlbiBzYXZlZFwwMzNbMTswbSIpLmNlbnRlcig1MCkNCiAgICB0aW1lLnNsZWVwKDEpDQogICAgb3Muc3lzdGVtKCd4ZGctb3BlbiBodHRwczovL3dhLm1lL21lc3NhZ2UvS0k3WldRV1E2TzVQTjEnKQ0KICAgIG1lbnUoKQ0KICAgIGlmIGhhY2sgPT0iMiI6DQogICAgICAgIGxvZ2luZmIoKQ0KICAgIGVsaWYgaGFjayA9PSIwIjoNCgkgICAgICAgIG1lbnUoKQ0KICAgIGVsc2U6DQoJICAgICAgICBwcmludCAoIlshXSBQbGVhc2UgU2VsZWN0IGEgVmFsaWQgT3B0aW9uIikNCgkJY2xvbmVfbG9naW52aWEoKQ0KZGVmIGxvZ2luZmIoKToNCiAgICBvcy5zeXN0ZW0oImNsZWFyIikNCiAgICBwcmludCBsb2dvDQogICAgb3Muc3lzdGVtKCJweXRob24zIC5sb2FkaW5nLm1kIikNCiAgICB0aW1lLnNsZWVwKDAuMSkNCiAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICBwcmludCBsb2dvDQogICAgcHJpbnQoIkxvZ2luIFdpdGggRmFjZWJvb2sgQWNjb3VudCIpLmNlbnRlcig1MCkNCiAgICBwcmludCgiVXNlIFByb3h5IHRvIGxvZ2luIGFjY291bnQgIikuY2VudGVyKDUwKQ0KICAgIHByaW50KCJcMDMzWzE7OTdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQ0KICAgIGlkID0gcmF3X2lucHV0KCJcMDMzWzE7OTdtWytdXDAzM1sxOzkzbSBFbWFpbC9JRC9OdW1iZXIgOlwwMzNbMTs5N20gIikNCiAgICBpZDEgPSBpZC5yZXBsYWNlKCcgJywnJykNCiAgICBpZDIgPSBpZDEucmVwbGFjZSgnKCcsJycpDQogICAgdWlkID0gaWQyLnJlcGxhY2UoJyknLCcnKQ0KICAgIHB3ZCA9IHJhd19pbnB1dCgiXDAzM1sxOzk3bVsrXVwwMzNbMTs5M20gUGFzc3dvciA6XDAzM1sxOzk3bSAiKQ0KICAgIHByaW50KCJcMDMzWzE7OTdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQ0KICAgIGxvZ2dpbmcoKQ0KICAgIGRhdGEgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MSZlbWFpbD0iK3VpZCsiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iK3B3ZCsiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCiAgICBxID0ganNvbi5sb2FkcyhkYXRhKQ0KICAgIGlmICJhY2Nlc3NfdG9rZW4iIGluIHE6DQogICAgICAgIHN1Y2MgPSBvcGVuKCIubG9naW4udHh0IiwidyIpDQogICAgICAgIHN1Y2Mud3JpdGUocVsiYWNjZXNzX3Rva2VuIl0pDQogICAgICAgIHN1Y2MuY2xvc2UoKQ0KICAgICAgICB0aW1lLnNsZWVwKDEpDQoJcHJpbnQoIlwwMzNbMTs5Mm1DaGVja2luZyBhY2NvdW50XDAzM1sxOzBtIikuY2VudGVyKDUwKQ0KCXRpbWUuc2xlZXAoMC4xKQ0KCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCXByaW50IGxvZ28NCglwcmludCgiXDAzM1sxOzk3bVJlZnJlc2ggYWNjb3VudFwwMzNbMTswbSIpLmNlbnRlcig1MCkNCgl0aW1lLnNsZWVwKDAuMSkNCglvcy5zeXN0ZW0oImNsZWFyIikNCglwcmludCBsb2dvDQoJcHJpbnQoIlwwMzNbMTs5Mm1QbGVhc2UgV2FpdCAwXHgxYlsxOzkxbV9cMDMzWzE7OTJtMCIpLmNlbnRlcig1MCkNCgl0aW1lLnNsZWVwKDAuMSkNCglvcy5zeXN0ZW0oImNsZWFyIikNCglwcmludCBsb2dvDQoJcHJpbnQoIlwwMzNbMTs5N21BY2NvdW50IGhhcyBiZWVuIHNhdmVkXDAzM1sxOzBtIikuY2VudGVyKDUwKQ0KICAgICAgICB0aW1lLnNsZWVwKDEpDQoJb3Muc3lzdGVtKCd4ZGctb3BlbiBodHRwczovL2NoYXQud2hhdHNhcHAuY29tL0hLcFJSdndJeHUyOThaZ2x3ajkzWFonKQ0KICAgICAgICBtZW51KCkNCiAgICBlbHNlOg0KICAgICAgICBpZiAid3d3LmZhY2Vib29rLmNvbSIgaW4gcVsiZXJyb3JfbXNnIl06DQogICAgICAgICAgICBwcmludCAoIlxuXDAzM1sxOzMxbVshXSBMb2dpbiBGYWlsZWQgLiBBY2NvdW50IEhhcyBhIENoZWNrcG9pbnRcMDMzWzA7OTdtIikNCiAgICAgICAgICAgIHRpbWUuc2xlZXAoMC4xKQ0KICAgICAgICAgICAgbG9naW5mYigpDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICBwcmludCgiXG5cMDMzWzE7MzFtWyFdIExvZ2luIEZhaWxlZC5FbWFpbC9JRC9OdW1iZXIgT1IgUGFzc3dvcmQgTWF5IEJFIFdyb25nXDAzM1swOzk3bSIpDQogICAgICAgICAgICB0aW1lLnNsZWVwKDAuMSkNCiAgICAgICAgICAgIGxvZ2luZmIoKQ0KDQpkZWYgbWVudSgpOg0KICAgIG9zLnN5c3RlbSgiY2xlYXIiKQ0KICAgIHRyeToNCiAgICAgICAgdG9rZW4gPSBvcGVuKCIubG9naW4udHh0IiwiciIpLnJlYWQoKQ0KICAgIGV4Y2VwdCBJT0Vycm9yOg0KICAgICAgICBwcmludCBsb2dvDQogICAgICAgIHByaW50KCJbIV0gRXJyb3IgNDA0LlRva2VuIE5vdCBGb3VuZCIpDQogICAgICAgIG9zLnN5c3RlbSgicm0gLXJmIC5sb2dpbi50eHQiKQ0KICAgICAgICB0aW1lLnNsZWVwKDAuMSkNCiAgICAgICAgbG9naW5fY2hvaWNlKCkNCiAgICB0cnk6DQogICAgICAgIHIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lP2FjY2Vzc190b2tlbj0iK3Rva2VuLCBoZWFkZXJzPWhlYWRlcikNCiAgICAgICAgYSA9IGpzb24ubG9hZHMoci50ZXh0KQ0KICAgICAgICBuYW1lID0gYVsibmFtZSJdDQogICAgZXhjZXB0IEtleUVycm9yOg0KICAgICAgICBvcy5zeXN0ZW0oImNsZWFyIikNCiAgICAgICAgcHJpbnQgbG9nbw0KICAgICAgICBwcmludCgiXDAzM1sxOzkxbVshXSBMb2FkaW5nIEZhaWxlZCAuIFlvdXIgQWNjb3VudCBIYXMgYSBDaGVja3BvaW50IikNCiAgICAgICAgb3Muc3lzdGVtKCJybSAtcmYgLmxvZ2luLnR4dCIpDQogICAgICAgIHRpbWUuc2xlZXAoMC4xKQ0KICAgICAgICBsb2dpbl9jaG9pY2UoKQ0KICAgIG9zLnN5c3RlbSgnY2xlYXInKQ0KICAgIHByaW50IGxvZ28NCiAgICBvcy5zeXN0ZW0oInB5dGhvbjMgLmxvYWRpbmcubWQiKQ0KICAgIHRpbWUuc2xlZXAoMC4wMSkNCiAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICBwcmludCBsb2dvDQogICAgamFsYW4oJ1x4MWJbMTszMTs0MG1bXHgxYlsxOzkybSpceDFiWzE7MzE7NDBtXSBceDFiWzE7MzNtQWNjb3VudCBOYW1lXHgxYlsxOzMwOzQwbSAgPT1ceDFiWzE7OTFtPiBceDFiWzE7OTJtICcgKyBuYW1lKQ0KICAgIGphbGFuKCdceDFiWzE7MzE7NDBtW1x4MWJbMTs5Mm0qXHgxYlsxOzMxOzQwbV0gXHgxYlsxOzMzbURhdGUgT2YgQmlydGhceDFiWzE7MzA7NDBtID09XHgxYlsxOzkxbT4gXHgxYlswOzkybSAnICsgYVsnYmlydGhkYXknXSkNCiAgICBzeXMuc3Rkb3V0LmZsdXNoKCkNCiAgICB0aW1lLnNsZWVwKDAuMDEpDQogICAgcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQogICAgcHJpbnQoIlwwMzNbMTs5MW1bXDAzM1sxOzkybTFcMDMzWzE7OTFtXSBcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTdtQ2xvbmUgRnJpZW5saXN0IGFuZCBQdWJsaWMgSUQiKQ0KICAgIHByaW50KCJcMDMzWzE7OTFtW1wwMzNbMTs5Mm0yXDAzM1sxOzkxbV0gXDAzM1sxOzkwbT09XDAzM1sxOzkybT4gXDAzM1sxOzk3bVJhbmRvbSB3aXRoIGNob2ljZSBwYXNzd29yZCIpDQogICAgcHJpbnQoIlwwMzNbMTs5MW1bXDAzM1sxOzkybTNcMDMzWzE7OTFtXSBcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTdtQ2xvbmUgQmFuZ2xhZGVzaCBhbmQgSW5kaWEiKQ0KICAgIHByaW50KCJcMDMzWzE7OTFtW1wwMzNbMTs5Mm00XDAzM1sxOzkxbV0gXDAzM1sxOzkwbT09XDAzM1sxOzkybT4gXDAzM1sxOzk3bU1vcmUgSGFja2luZyBUb29scyBcMDMzWzE7OTdtKFwwMzNbMTs5Mm1Db250aW51ZVwwMzNbMTs5N20pICIpDQogICAgcHJpbnQoIlwwMzNbMTs5MW1bXDAzM1sxOzkybTVcMDMzWzE7OTFtXSBcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTdtQ29udGFjdCBPd25lciIpDQogICAgcHJpbnQoIlwwMzNbMTs5MW1bXDAzM1sxOzkybTZcMDMzWzE7OTFtXSBcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTdtVG9vbCBVcGRhdGUiKQ0KICAgIHByaW50KCJcMDMzWzE7OTFtW1wwMzNbMTs5Mm0wXDAzM1sxOzkxbV0gXDAzM1sxOzkwbT09XDAzM1sxOzkybT4gXDAzM1sxOzkxbWxvZ291dCIpDQogICAgcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpIA0KICAgIG1lbnVfc2VsZWN0KCkNCmRlZiBtZW51X3NlbGVjdCgpOg0KICAgIG9wdGlvbiA9IHJhd19pbnB1dCgiXG7ilbDilIDinqMgIikNCiAgICBpZiBvcHRpb24gPT0iMSI6DQogICAgICAgIGNyYWNrKCkNCiAgICBpZiBvcHRpb24gPT0iMiI6DQogICAgICAgIGNob2ljZSgpDQogICAgaWYgb3B0aW9uID09IjMiOg0KICAgICAgICBtb3JlYygpDQogICAgaWYgb3B0aW9uID09IjQiOg0KICAgICAgICBoYWNrZXIoKQ0KICAgIGVsaWYgb3B0aW9uID09IjUiOg0KICAgICAgICBvcy5zeXN0ZW0oJ3hkZy1vcGVuIGh0dHBzOi8vd2EubWUvbWVzc2FnZS9LSTdaV1FXUTZPNVBOMScpDQoJbWVudSgpDQogICAgZWxpZiBvcHRpb24gPT0iNiI6DQogICAgICAgIG9zLnN5c3RlbSgiY2xlYXIiKQ0KICAgICAgICBwcmludCBsb2dvDQogICAgICAgIHVwZGF0ZWluZygpDQogICAgICAgIG9zLnN5c3RlbSgiZ2l0IHB1bGwgb3JpZ2luIG1hc3RlciIpDQogICAgICAgIHRpbWUuc2xlZXAoMSkNCiAgICAgICAgb3Muc3lzdGVtKCJjbGVhciIpDQogICAgICAgIHByaW50IGxvZ28NCiAgICAgICAga2dmKCJcMDMzWzE7MzJtW+Kck10gVG9vbCBIYXMgQmVlbiBVcGRhdGVkIFN1Y2Nlc3NmdWxseVwwMzNbMDs5N20iKQ0KICAgICAgICB0aW1lLnNsZWVwKDEpDQogICAgICAgIG9zLnN5c3RlbSgicHl0aG9uMiBrZ2YxLnB5IikNCiAgICBlbGlmIG9wdGlvbiA9PSIwIjoNCiAgICAgICAgbG9nb3V0KCkNCiAgICAgICAgb3Muc3lzdGVtKCJybSAtcmYgLmxvZ2luLnR4dCIpDQogICAgICAgIHRpbWUuc2xlZXAoMSkNCiAgICAgICAgcHJpbnQoIlxyXDAzM1sxOzMybVvinJNdIExvZ2dlZCBPdXQgU3VjY2Vzc2Z1bGx5XDAzM1swOzk3bSIpDQogICAgICAgIG9zLnN5c3RlbSgiZXhpdCIpDQogICAgZWxzZToNCiAgICAgICAgcHJpbnQoIlshXSBQbGVhc2UgU2VsZWN0IGEgVmFsaWQgT3B0aW9uIikNCiAgICAgICAgbWVudV9zZWxlY3QoKQ0KCQkNCmRlZiBjcmFjaygpOg0KCWdsb2JhbCB0b2tlbg0KCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCXRyeToNCgkJdG9rZW49b3BlbigiLmxvZ2luLnR4dCIsInIiKS5yZWFkKCkNCglleGNlcHQgSU9FcnJvcjoNCgkJcHJpbnQoIlshXSBFcnJvciA0MDQgLiBUb2tlbiBOb3QgRm91bmQiKQ0KCQlvcy5zeXN0ZW0oInJtIC1yZiAubG9naW4udHh0IikNCgkJdGltZS5zbGVlcCgxKQ0KCQlsb2dpbigpDQoJb3Muc3lzdGVtKCJjbGVhciIpDQoJcHJpbnQgbG9nbw0KCW9zLnN5c3RlbSgicHl0aG9uMyAubG9hZGluZy5tZCIpDQogICAgICAgIHRpbWUuc2xlZXAoMSkNCiAgICAgICAgb3Muc3lzdGVtKCdjbGVhcicpDQogICAgICAgIHByaW50IGxvZ28NCiAgICAgICAgcHJpbnQgKCJcMDMzWzE7OTFtW1wwMzNbMTs5MG0xXDAzM1sxOzkxbV1cMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTdtQ3JhY2sgRnJvbSBGcmllbmQgTGlzdCIpDQoJcHJpbnQgKCJcMDMzWzE7OTFtW1wwMzNbMTs5MG0yXDAzM1sxOzkxbV1cMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTdtQ3JhY2sgRnJvbSBQdWJsaWMgSUQiKQ0KCXByaW50ICgiXDAzM1sxOzkxbVtcMDMzWzE7OTBtM1wwMzNbMTs5MW1dXDAzM1sxOzkwbT09XDAzM1sxOzkybT4gXDAzM1sxOzk3bUNyYWNrIEZyb20gRm9sbG93ZXJzIikNCglwcmludCAoIlwwMzNbMTs5MW1bXDAzM1sxOzkwbTRcMDMzWzE7OTFtXVwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+IFwwMzNbMTs5N21DcmFjayBGcm9tIFBhZ2UvR3JvdXAvSUQgUG9zdCIpDQoJcHJpbnQgKCdcMDMzWzE7OTFtW1wwMzNbMTs5MG0wXDAzM1sxOzkxbV1cMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTFtQmFjaycpDQoJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJY3JhY2syKCkNCmRlZiBjcmFjazIoKToNCglzZWxlY3QgPSByYXdfaW5wdXQoIlxu4pWw4pSA4p6jICIpDQoJaWQ9W10NCglva3M9W10NCgljcHM9W10NCglpZiBzZWxlY3Q9PSIxIjoNCgkJb3Muc3lzdGVtKCJjbGVhciIpDQoJCXByaW50IGxvZ28NCgkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vbWUvZnJpZW5kcz9hY2Nlc3NfdG9rZW49Iit0b2tlbiwgaGVhZGVycz1oZWFkZXIpDQoJCXogPSBqc29uLmxvYWRzKHIudGV4dCkNCgkJZm9yIHMgaW4gelsiZGF0YSJdOg0KCQkJdWlkPXNbJ2lkJ10NCgkJCW5hPXNbJ25hbWUnXQ0KCQkJbm09bmEucnNwbGl0KCIgIilbMF0NCgkJCWlkLmFwcGVuZCh1aWQrJ3wnK25tKQ0KCWVsaWYgc2VsZWN0ID09IjIiOg0KCQlvcy5zeXN0ZW0oImNsZWFyIikNCgkJcHJpbnQgbG9nbw0KCQlpZHQgPSByYXdfaW5wdXQoIlwwMzNbMTs5N21bK11cMDMzWzE7OTNtIElucHV0IElEIDpcMDMzWzE7OTZtICIpDQoJCXByaW50KCJcMDMzWzE7OTdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQ0KCQlvcy5zeXN0ZW0oImNsZWFyIikNCgkJcHJpbnQgbG9nbw0KCQl0cnk6DQoJCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiP2FjY2Vzc190b2tlbj0iK3Rva2VuLCBoZWFkZXJzPWhlYWRlcikNCgkJCXEgPSBqc29uLmxvYWRzKHIudGV4dCkNCgkJCXByaW50KCJcMDMzWzE7OTFtW1x4MWJbMTs5Mm3inJNcMDMzWzE7OTFtXVx4MWJbMTs5M20gQWNjb3VudCBOYW1lXDAzM1sxOzkxbSA6XHgxYlsxOzkybSAiK3FbIm5hbWUiXSkNCgkJZXhjZXB0IEtleUVycm9yOg0KCQkJcHJpbnQoJ1xuWyFdIEVycm9yIDQwNCAuIElEIExpbmsgJytpZHQrJyBIYXZlIFByaXZhY3kgT24gRnJpZW5kbGlzdCBPUiBJUyBOb3QgVmFsaWQnKQ0KCQkJcmF3X2lucHV0KCJcblByZXNzIEVudGVyIFRvIEJhY2sgIikNCgkJCWNyYWNrKCkNCgkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIi9mcmllbmRzP2FjY2Vzc190b2tlbj0iK3Rva2VuLCBoZWFkZXJzPWhlYWRlcikNCgkJeiA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQlmb3IgaSBpbiB6WyJkYXRhIl06DQoJCQl1aWQ9aVsnaWQnXQ0KCQkJbmE9aVsnbmFtZSddDQoJCQlubT1uYS5yc3BsaXQoIiAiKVswXQ0KCQkJaWQuYXBwZW5kKHVpZCsnfCcrbm0pDQoJZWxpZiBzZWxlY3QgPT0iMyI6DQoJCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCQlwcmludCBsb2dvDQoJCWlkdCA9IHJhd19pbnB1dCgiXDAzM1sxOzk3bVsrXVwwMzNbMTs5M20gSW5wdXQgSUQgOlwwMzNbMTs5Nm0gIikNCgkJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCQlwcmludCBsb2dvDQoJCXRyeToNCgkJCXIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyI/YWNjZXNzX3Rva2VuPSIrdG9rZW4sIGhlYWRlcnM9aGVhZGVyKQ0KCQkJcSA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQkJcHJpbnQoIlwwMzNbMTs5MW1bXHgxYlsxOzkybeKck1wwMzNbMTs5MW1dXHgxYlsxOzkzbSBBY2NvdW50IE5hbWVcMDMzWzE7OTFtIDpceDFiWzE7OTJtICIrcVsibmFtZSJdKQ0KCQlleGNlcHQgS2V5RXJyb3I6DQoJCQlwcmludCgnXG5bIV0gRXJyb3IgNDA0IC4gSUQgTGluayAnK2lkdCsnIERvbm90IEhhdmUgRm9sbG93ZXJzIE9SIElTIE5vdCBWYWxpZCcpDQoJCQlyYXdfaW5wdXQoIlxuUHJlc3MgRW50ZXIgVG8gQmFjayAiKQ0KCQkJY3JhY2soKQ0KCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiL3N1YnNjcmliZXJzP2FjY2Vzc190b2tlbj0iK3Rva2VuKyImbGltaXQ9NTAwMCIsIGhlYWRlcnM9aGVhZGVyKQ0KCQl6ID0ganNvbi5sb2FkcyhyLnRleHQpDQoJCWZvciBpIGluIHpbImRhdGEiXToNCgkJCXVpZD1pWydpZCddDQoJCQluYT1pWyduYW1lJ10NCgkJCW5tPW5hLnJzcGxpdCgiICIpWzBdDQoJCQlpZC5hcHBlbmQodWlkKyd8JytubSkNCgllbGlmIHNlbGVjdCA9PSI0IjoNCgkJb3Muc3lzdGVtKCJjbGVhciIpDQoJCXByaW50IGxvZ28NCgkJaWR0ID0gcmF3X2lucHV0KCJcMDMzWzE7OTdtWytdXDAzM1sxOzkzbSBJbnB1dCBQb3N0IElEIDpcMDMzWzE7OTZtICIpDQoJCXByaW50KCJcMDMzWzE7OTdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQ0KCQlvcy5zeXN0ZW0oImNsZWFyIikNCgkJcHJpbnQgbG9nbw0KCQl0cnk6DQoJCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiL2xpa2VzP2xpbWl0PTk5OTk5OTkmYWNjZXNzX3Rva2VuPSIrdG9rZW4sIGhlYWRlcnM9aGVhZGVyKQ0KCQkJeiA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQkJZm9yIGkgaW4gelsiZGF0YSJdOg0KCQkJCXVpZD1pWydpZCddDQoJCQkJbmE9aVsnbmFtZSddDQoJCQkJbm09bmEucnNwbGl0KCIgIilbMF0NCgkJCQlpZC5hcHBlbmQodWlkKyd8JytubSkNCgkJZXhjZXB0IEtleUVycm9yOg0KCQkJcHJpbnQoJ1xuWyFdIEVycm9yIDQwNCAuIFBvc3QgSUQgJytpZHQrJyBNYXkgTm90IEJlIFZhbGlkJykNCgkJCXJhd19pbnB1dCgiXG5QcmVzcyBFbnRlciBUbyBCYWNrIikNCgkJCWNyYWNrKCkNCgkgICANCgllbGlmIHNlbGVjdCA9PSIwIjoNCgkJbWVudSgpDQoJZWxzZToNCgkJcHJpbnQgKCJbIV0gUGxlYXNlIFNlbGVjdCBhIFZhbGlkIE9wdGlvbiIpDQoJCWNyYWNrMigpDQoJcHJpbnQoIlwwMzNbMTs5N21b4pyTXVwwMzNbMTs5N20gVG90YWwgSURzIDpcMDMzWzE7OTdtICIrc3RyKGxlbihpZCkpKQ0KCXRpbWUuc2xlZXAoMC41KQ0KCXByaW50KCJcMDMzWzE7OTdtW1x4MWJbMTs5M23inJNcMDMzWzE7OTdtXVwwMzNbMTs5Mm0gVGhlIFByb2Nlc3MgSXMgUnVubmluZyBJbiBCYWNrZ3JvdW5kXDAzM1sxOzBtIikNCgl0aW1lLnNsZWVwKDAuNSkNCglwcmludCgiXDAzM1sxOzk3bVtceDFiWzE7OTNt4pyTXDAzM1sxOzk3bV1cMDMzWzE7OTJtIFRvIFN0b3AgUHJvY2VzcyBQcmVzcyBDVFJMIFRoZW4gUHJlc3NcMDMzWzE7OTFtIHpcMDMzWzE7MG0iKQ0KCXRpbWUuc2xlZXAoMC41KQ0KCXByaW50KCJcMDMzWzE7OTdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQ0KCQ0KCQ0KICAgICAgICBkZWYgbWFpbihhcmcpOg0KCQl1c2VyPWFyZw0KCQl1aWQsbmFtZT11c2VyLnNwbGl0KCJ8IikNCgkJdHJ5Og0KCQkgICAgcGFzczE9bmFtZSsiMTIiDQoJCSAgICBxID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IiArIHVpZCArICImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIgKyBwYXNzMSArICImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkgICAgZD1qc29uLmxvYWRzKHEpDQoJCSAgICBpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gZFsnZXJyb3JfbXNnJ106DQoJCSAgICAgICAgcHJpbnQoIlwwMzNbMTs5M21bXDAzM1sxOzk3bUNoZWNrXDAzM1sxOzkxbS1cMDMzWzE7OTdtcG9pbnRcMDMzWzE7OTNtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczErIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgIGNwPW9wZW4oImNwLnR4dCIsImEiKQ0KCQkgICAgICAgIGNwLndyaXRlKHVpZCsiIHwgIitwYXNzMSsiXG4iKQ0KCQkgICAgICAgIGNwLmNsb3NlKCkNCgkJICAgICAgICBjcHMuYXBwZW5kKHVpZCkNCgkJICAgIGVsc2U6DQoJCSAgICAJaWYgImFjY2Vzc190b2tlbiIgaW4gZDoNCgkJICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5MW1bXDAzM1sxOzkybVN1Y2Nlc3NmdWxcMDMzWzE7OTFtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczErIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICBvaz1vcGVuKCJvay50eHQiLCJhIikNCgkJICAgICAgICAgICAgb2sud3JpdGUodWlkKyIgfCAiK3Bhc3MxKyJcbiIpDQoJCSAgICAgICAgICAgIG9rLmNsb3NlKCkNCgkJICAgICAgICAgICAgb2tzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgcGFzczI9bmFtZSsiNzg2Ig0KCQkgICAgICAgICAgICBxID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IiArIHVpZCArICImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIgKyBwYXNzMiArICImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkgICAgICAgICAgICBkPWpzb24ubG9hZHMocSkNCgkJICAgICAgICAgICAgaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIGRbJ2Vycm9yX21zZyddOg0KCQkgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5M21bXDAzM1sxOzk3bUNoZWNrXDAzM1sxOzkxbS1cMDMzWzE7OTdtcG9pbnRcMDMzWzE7OTNtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczIrIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICAgICAgY3A9b3BlbigiY3AudHh0IiwiYSIpDQoJCSAgICAgICAgICAgICAgICBjcC53cml0ZSh1aWQrIiB8ICIrcGFzczIrIlxuIikNCgkJICAgICAgICAgICAgICAgIGNwLmNsb3NlKCkNCgkJICAgICAgICAgICAgICAgIGNwcy5hcHBlbmQodWlkKQ0KCQkgICAgICAgICAgICBlbHNlOg0KCQkgICAgICAgICAgICAgICAgaWYgJ2FjY2Vzc190b2tlbicgaW4gZDoNCgkJICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1sxOzkxbVtcMDMzWzE7OTJtU3VjY2Vzc2Z1bFwwMzNbMTs5MW1dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzMisiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICAgICAgb2s9b3Blbigib2sudHh0IiwiYSIpDQoJCSAgICAgICAgICAgICAgICAgICAgb2sud3JpdGUodWlkKyIgfCAiK3Bhc3MyKyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgb2suY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgICAgIG9rcy5hcHBlbmQodWlkKQ0KCQkgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICBwYXNzMz1uYW1lKyIxMjM0NSINCgkJICAgICAgICAgICAgICAgICAgICBxID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IiArIHVpZCArICImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIgKyBwYXNzMyArICImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkgICAgICAgICAgICAgICAgICAgIGQ9anNvbi5sb2FkcyhxKQ0KCQkgICAgICAgICAgICAgICAgICAgIGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBkWydlcnJvcl9tc2cnXToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5M21bXDAzM1sxOzk3bUNoZWNrXDAzM1sxOzkxbS1cMDMzWzE7OTdtcG9pbnRcMDMzWzE7OTNtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczMrIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICBjcD1vcGVuKCJjcC50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgY3Aud3JpdGUodWlkKyIgfCAiK3Bhc3MzKyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgIGNwLmNsb3NlKCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgY3BzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ2FjY2Vzc190b2tlbicgaW4gZDoNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTFtW1wwMzNbMTs5Mm1TdWNjZXNzZnVsXDAzM1sxOzkxbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3MzKyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rPW9wZW4oIm9rLnR4dCIsImEiKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2sud3JpdGUodWlkKyIgfCAiK3Bhc3MzKyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICBvay5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICBva3MuYXBwZW5kKHVpZCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3M0PSI3ODY3ODYiDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICBxID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IiArIHVpZCArICImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIgKyBwYXNzNCArICImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgZD1qc29uLmxvYWRzKHEpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gZFsnZXJyb3JfbXNnJ106DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5M21bXDAzM1sxOzk3bUNoZWNrXHgxYlsxOzkxbS1ceDFiWzE7OTdtUG9pbnRcMDMzWzE7OTNtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczQrIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwPW9wZW4oImNwLnR4dCIsImEiKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwLndyaXRlKHVpZCsiIHwgIitwYXNzNCsiXG4iKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwLmNsb3NlKCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKHVpZCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ2FjY2Vzc190b2tlbicgaW4gZDoNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5MW1bXDAzM1sxOzkybVN1Y2Nlc3NmdWxcMDMzWzE7OTFtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczQrIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvaz1vcGVuKCJvay50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2sud3JpdGUodWlkKyIgfCAiK3Bhc3M0KyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rLmNsb3NlKCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2tzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzczU9IjAwMDc4NiINCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIgKyB1aWQgKyAiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iICsgcGFzczUgKyAiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZD1qc29uLmxvYWRzKHEpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBkWydlcnJvcl9tc2cnXToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTNtW1wwMzNbMTs5N21DaGVja1wwMzNbMTs5MW0tXDAzM1sxOzk3bXBvaW50XDAzM1sxOzkzbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3M1KyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwPW9wZW4oImNwLnR4dCIsImEiKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3Aud3JpdGUodWlkKyIgfCAiK3Bhc3M1KyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcC5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKHVpZCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICdhY2Nlc3NfdG9rZW4nIGluIGQ6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5MW1bXDAzM1sxOzkybVN1Y2Nlc3NmdWxsXDAzM1sxOzkxbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3M1KyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvaz1vcGVuKCJvay50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvay53cml0ZSh1aWQrIiB8ICIrcGFzczUrIlxuIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvay5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2tzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3M2PWJbJ2xhc3RfbmFtZSddICsgJzEyMycNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBxID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IiArIHVpZCArICImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIgKyBwYXNzNiArICImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ9anNvbi5sb2FkcyhxKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBkWydlcnJvcl9tc2cnXToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5M21bXDAzM1sxOzk3bUNoZWNrXDAzM1sxOzkxbS1cMDMzWzE7OTdtcG9pbnRcMDMzWzE7OTNtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczYrIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcD1vcGVuKCJjcC50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3Aud3JpdGUodWlkKyIgfCAiK3Bhc3M2KyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwLmNsb3NlKCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3BzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ2FjY2Vzc190b2tlbicgaW4gZDoNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTFtW1wwMzNbMTs5Mm1TdWNjZXNzZnVsbFwwMzNbMTs5MW1dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzNisiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvaz1vcGVuKCJvay50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rLndyaXRlKHVpZCsiIHwgIitwYXNzNisiXG4iKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2suY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2tzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzNj1iWydsYXN0X25hbWUnXSArICcxMjM0NScNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHEgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iICsgdWlkICsgIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IiArIHBhc3M3ICsgIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIsIGhlYWRlcnM9aGVhZGVyKS50ZXh0DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkPWpzb24ubG9hZHMocSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBkWydlcnJvcl9tc2cnXToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1sxOzkzbVtcMDMzWzE7OTdtQ2hlY2tcMDMzWzE7OTFtLVwwMzNbMTs5N21wb2ludFwwMzNbMTs5M21dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzNysiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3A9b3BlbigiY3AudHh0IiwiYSIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3Aud3JpdGUodWlkKyIgfCAiK3Bhc3M3KyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3AuY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwcy5hcHBlbmQodWlkKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAnYWNjZXNzX3Rva2VuJyBpbiBkOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTFtW1wwMzNbMTs5Mm1TdWNjZXNzZnVsbFwwMzNbMTs5MW1dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzNysiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2s9b3Blbigib2sudHh0IiwiYSIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2sud3JpdGUodWlkKyIgfCAiK3Bhc3M3KyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2suY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rcy5hcHBlbmQodWlkKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KCQkJCQkJCQkJDQoJCQkJCQkJCQkJCQkJCQkNCgkJZXhjZXB0Og0KCQkJcGFzcw0KCQkNCglwID0gVGhyZWFkUG9vbCgzMCkNCglwLm1hcChtYWluLCBpZCkNCglwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCglwcmludCAoJ1wwMzNbMTs5N21b4pyTXVwwMzNbMTs5Mm0gUHJvY2VzcyBIYXMgQmVlbiBDb21wbGV0ZWQnKQ0KCXByaW50KCdcMDMzWzE7OTdtW1x4MWJbMTs5M23inJNceDFiWzE7OTdtXVwwMzNbMTs5Mm0gVG90YWxceDFiWzE7OTNtIENQIFwwMzNbMTs5MW0vXDAzM1sxOzkybU9LXDAzM1sxOzkzbTpceDFiWzE7OTdtXDAzM1swOzk3bSAgJytzdHIobGVuKGNwcykpKycvXDAzM1s7MzJtIFwwMzNbMDs5N20nK3N0cihsZW4ob2tzKSkpDQoJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJZG93bigpDQpkZWYgZG93bigpOg0KICAgIGRvdyA9IHJhd19pbnB1dCgiXDAzM1sxOzk3bVs/XVwwMzNbMTs5M20gRG8gWW9vdSBXYW50IFRvIERvd25sb2FkIENwIEZpbGU/XDAzM1sxOzk3bSAoWWVzL05vKSAiKQ0KICAgIGlmIGRvdyA9PSJ5ZXMiIG9yIGRvdyA9PSJ5IjoNCiAgICAgICAgb3Muc3lzdGVtKCJjbGVhciIpDQogICAgICAgIHByaW50IGxvZ28NCiAgICAgICAgZG93bmxvYWQoKQ0KICAgICAgICBwcmludCgiXG5cMDMzWzE7OTdtWyFdXDAzM1sxOzkzbSBQbGVhc2UgR2l2ZSBTdG9yYWdlIFBlcm1pc3Npb24gSWYgQXNrIikNCiAgICAgICAgb3Muc3lzdGVtKCJ0ZXJtdXgtc2V0dXAtc3RvcmFnZSIpDQogICAgICAgIG9zLnN5c3RlbSgiY3AgY3AudHh0IC9zZGNhcmQiKQ0KICAgICAgICBwcmludCgnXDAzM1sxOzkzbVvinJNdXDAzM1sxOzkybSBGaWxlIERvd25sb2FkZWQgU3VjY2Vzc2Z1bGx5JykNCiAgICAgICAgcHJpbnQoIlwwMzNbMTs5M21b4pyTXVwwMzNbMTs5M20gUGxlYXNlIE9wZW4gWW91ciBJbnRlcm5hbCBTdG9yYWdlIGFuZCBSZW5hbWUgVGhlIEZpbGUiKQ0KICAgICAgICByYXdfaW5wdXQoIlwwMzNbMTs5N21QcmVzcyBFbnRlciBUbyBSZXR1cm4gSW4gTWFpbiBNZW51ICIpDQogICAgICAgIGNyYWNrKCkNCiAgICBlbGlmIGRvdyA9PSJubyIgb3IgZG93PT0ibiI6DQogICAgICAgIGNyYWNrKCkNCiAgICBlbHNlOg0KICAgICAgICBwcmludCgiXDAzM1sxOzkxbVshXSBQbGVhc2UgU2VsZWN0IGEgVmFsaWQgT3B0aW9uICIpDQogICAgICAgIGRvd24oKQ0KCQkNCmRlZiBjaG9pY2UoKToNCiAgICBvcy5zeXN0ZW0oImNsZWFyIikNCiAgICBwcmludCBsb2dvDQogICAgb3Muc3lzdGVtKCJweXRob24zIC5sb2FkaW5nLm1kIikNCiAgICB0aW1lLnNsZWVwKDEpDQogICAgb3Muc3lzdGVtKCdjbGVhcicpDQogICAgcHJpbnQgbG9nbw0KICAgIHByaW50KCJcMDMzWzE7OTJtW1wwMzNbMTs5MG0xXHgxYlsxOzkybV1cMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTdtUmFuZG9tIEZyaWVubGlzdCBXaXRoIDIgQ2hvaWNlIFBhc3MiKQ0KICAgIHByaW50KCJcMDMzWzE7OTJtW1wwMzNbMTs5MG0yXHgxYlsxOzkybV1cMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTdtUmFuZG9tIEZyaWVubGlzdCBXaXRoIDUgQ2hvaWNlIFBhc3MiKQ0KICAgIHByaW50KCJcMDMzWzE7OTJtW1wwMzNbMTs5MG0wXHgxYlsxOzkybV1cMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTFtQmFjayIpCQ0KICAgIHRpbWUuc2xlZXAoMC41KQ0KICAgIHByaW50KCJcMDMzWzE7OTdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQ0KICAgIGNob2ljZV9tYW4oKQ0KZGVmIGNob2ljZV9tYW4oKToNCiAgICBvcHRpb24gPSByYXdfaW5wdXQoIlxu4pWw4pSA4p6jICIpDQogICAgaWYgb3B0aW9uID09IjEiOg0KICAgICAgICB1bmlraygpDQogICAgaWYgb3B0aW9uID09IjIiOg0KICAgICAgICByYW5kbSgpDQogICAgaWYgb3B0aW9uID09IjAiOgkNCiAgICAgICAgICBtZW51KCkNCiAgICBlbHNlOg0KICAgICAgICAgIHByaW50ICgiWyFdIFBsZWFzZSBTZWxlY3QgYSBWYWxpZCBPcHRpb24iKQ0KICAgICAgICAgIGNob2ljZV9tYW4oKQkJDQoJCQ0KZGVmIHVuaWtrKCk6DQoJZ2xvYmFsIHRva2VuDQoJb3Muc3lzdGVtKCJjbGVhciIpDQoJdHJ5Og0KCQl0b2tlbj1vcGVuKCIubG9naW4udHh0IiwiciIpLnJlYWQoKQ0KCWV4Y2VwdCBJT0Vycm9yOg0KCQlwcmludCgiWyFdIEVycm9yIDQwNCAuIFRva2VuIE5vdCBGb3VuZCIpDQoJCW9zLnN5c3RlbSgicm0gLXJmIC5sb2dpbi50eHQiKQ0KCQl0aW1lLnNsZWVwKDEpDQoJCWxvZ2luKCkNCglvcy5zeXN0ZW0oImNsZWFyIikNCglwcmludCBsb2dvDQoJb3Muc3lzdGVtKCJweXRob24zIC5sb2FkaW5nLm1kIikNCiAgICAgICAgdGltZS5zbGVlcCgxKQ0KICAgICAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICAgICAgcHJpbnQgbG9nbw0KCXByaW50ICgiXDAzM1sxOzkxbVtcMDMzWzE7OTBtMVwwMzNbMTs5MW1dXDAzM1sxOzkwbT09XDAzM1sxOzkybT4gXDAzM1sxOzk3bUNyYWNrIEZyb20gRnJpZW5kIExpc3QiKQ0KCXByaW50ICgiXDAzM1sxOzkxbVtcMDMzWzE7OTBtMlwwMzNbMTs5MW1dXDAzM1sxOzkwbT09XDAzM1sxOzkybT4gXDAzM1sxOzk3bUNyYWNrIEZyb20gUHVibGljIElEIikNCglwcmludCAoIlwwMzNbMTs5MW1bXDAzM1sxOzkwbTNcMDMzWzE7OTFtXVwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+IFwwMzNbMTs5N21DcmFjayBGcm9tIEZvbGxvd2VycyIpDQoJcHJpbnQgKCJcMDMzWzE7OTFtW1wwMzNbMTs5MG00XDAzM1sxOzkxbV1cMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTdtQ3JhY2sgRnJvbSBQYWdlL0dyb3VwL0lEIFBvc3QiKQ0KCXByaW50ICgiXDAzM1sxOzkxbVtcMDMzWzE7OTBtMFwwMzNbMTs5MW1dXDAzM1sxOzkwbT09XDAzM1sxOzkybT4gXDAzM1sxOzkxbUJhY2siKQ0KCXByaW50KCJcMDMzWzE7OTdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQ0KCXVuaWtrMigpDQpkZWYgdW5pa2syKCk6DQoJZGV2aWwgPSByYXdfaW5wdXQoIlxu4pWw4pSA4p6jICIpDQoJaWQ9W10NCglva3M9W10NCgljcHM9W10NCglpZiBkZXZpbD09IjEiOg0KCQlvcy5zeXN0ZW0oImNsZWFyIikNCgkJcHJpbnQgbG9nbw0KCQlwYXNzMT1yYXdfaW5wdXQoIlwwMzNbMTs5M21bMV1cMDMzWzE7OTdtIElucHV0IFBhc3N3b3JkICA6XDAzM1sxOzk2bSAiKQ0KCQlwYXNzMj1yYXdfaW5wdXQoIlwwMzNbMTs5M21bMl1cMDMzWzE7OTdtIElucHV0IFBhc3N3b3JkICA6XDAzM1sxOzk2bSAiKQ0KCQlwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCgkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vbWUvZnJpZW5kcz9hY2Nlc3NfdG9rZW49Iit0b2tlbiwgaGVhZGVycz1oZWFkZXIpDQoJCXogPSBqc29uLmxvYWRzKHIudGV4dCkNCgkJZm9yIHMgaW4gelsiZGF0YSJdOg0KCQkJdWlkPXNbJ2lkJ10NCgkJCW5hPXNbJ25hbWUnXQ0KCQkJbm09bmEucnNwbGl0KCIgIilbMF0NCgkJCWlkLmFwcGVuZCh1aWQrJ3wnK25tKQ0KCWVsaWYgZGV2aWwgPT0iMiI6DQoJCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCQlwcmludCBsb2dvDQoJCWlkdCA9IHJhd19pbnB1dCgiXDAzM1sxOzk3bVsrXVwwMzNbMTs5M20gSW5wdXQgUG9zdCBJRC9Vc2VybmFtZSA6XDAzM1sxOzk2bSAiKQ0KCQlwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCgkJcGFzczE9cmF3X2lucHV0KCJcMDMzWzE7OTNtWzFdXDAzM1sxOzk3bSBJbnB1dCBQYXNzd29yZCAgOlwwMzNbMTs5Nm0gIikNCgkJcGFzczI9cmF3X2lucHV0KCJcMDMzWzE7OTNtWzJdXDAzM1sxOzk3bSBJbnB1dCBQYXNzd29yZCAgOlwwMzNbMTs5Nm0gIikNCgkJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJCXRyeToNCgkJCXIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyI/YWNjZXNzX3Rva2VuPSIrdG9rZW4sIGhlYWRlcnM9aGVhZGVyKQ0KCQkJcSA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQkJcHJpbnQoIlwwMzNbMTs5MW1bXHgxYlsxOzkybeKck1wwMzNbMTs5MW1dXHgxYlsxOzkzbSBBY2NvdW50IE5hbWVcMDMzWzE7OTFtIDpceDFiWzE7OTJtICIrcVsibmFtZSJdKQ0KCQlleGNlcHQgS2V5RXJyb3I6DQoJCQlwcmludCgnXG5bIV0gRXJyb3IgNDA0IC4gSUQgTGluayAnK2lkdCsnIEhhdmUgUHJpdmFjeSBPbiBGcmllbmRsaXN0IE9SIElTIE5vdCBWYWxpZCcpDQoJCQlyYXdfaW5wdXQoIlxuUHJlc3MgRW50ZXIgVG8gQmFjayAiKQ0KCQkJdW5pa2soKQ0KCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiL2ZyaWVuZHM/YWNjZXNzX3Rva2VuPSIrdG9rZW4sIGhlYWRlcnM9aGVhZGVyKQ0KCQl6ID0ganNvbi5sb2FkcyhyLnRleHQpDQoJCWZvciBpIGluIHpbImRhdGEiXToNCgkJCXVpZD1pWydpZCddDQoJCQluYT1pWyduYW1lJ10NCgkJCW5tPW5hLnJzcGxpdCgiICIpWzBdDQoJCQlpZC5hcHBlbmQodWlkKyd8JytubSkNCgllbGlmIGRldmlsID09IjMiOg0KCQlvcy5zeXN0ZW0oImNsZWFyIikNCgkJcHJpbnQgbG9nbw0KCQlpZHQgPSByYXdfaW5wdXQoIlwwMzNbMTs5N21bK11cMDMzWzE7OTNtIElucHV0IFBvc3QgSUQvVXNlcm5hbWUgOlwwMzNbMTs5Nm0gIikNCgkJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJCXBhc3MxPXJhd19pbnB1dCgiXDAzM1sxOzkzbVsxXVwwMzNbMTs5N20gSW5wdXQgUGFzc3dvcmQgIDpcMDMzWzE7OTZtICIpDQoJCXBhc3MyPXJhd19pbnB1dCgiXDAzM1sxOzkzbVsyXVwwMzNbMTs5N20gSW5wdXQgUGFzc3dvcmQgIDpcMDMzWzE7OTZtICIpDQoJCXByaW50KCJcMDMzWzE7OTdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQ0KCQl0cnk6DQoJCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiP2FjY2Vzc190b2tlbj0iK3Rva2VuLCBoZWFkZXJzPWhlYWRlcikNCgkJCXEgPSBqc29uLmxvYWRzKHIudGV4dCkNCgkJCXByaW50KCJcMDMzWzE7OTFtW1x4MWJbMTs5Mm3inJNcMDMzWzE7OTFtXVx4MWJbMTs5M20gQWNjb3VudCBOYW1lXDAzM1sxOzkxbSA6XHgxYlsxOzkybSAiK3FbIm5hbWUiXSkNCgkJZXhjZXB0IEtleUVycm9yOg0KCQkJcHJpbnQoJ1xuWyFdIEVycm9yIDQwNCAuIElEIExpbmsgJytpZHQrJyBEb25vdCBIYXZlIEZvbGxvd2VycyBPUiBJUyBOb3QgVmFsaWQnKQ0KCQkJcmF3X2lucHV0KCJcblByZXNzIEVudGVyIFRvIEJhY2sgIikNCgkJCWNyYWNrKCkNCgkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIi9zdWJzY3JpYmVycz9hY2Nlc3NfdG9rZW49Iit0b2tlbisiJmxpbWl0PTUwMDAiLCBoZWFkZXJzPWhlYWRlcikNCgkJeiA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQlmb3IgaSBpbiB6WyJkYXRhIl06DQoJCQl1aWQ9aVsnaWQnXQ0KCQkJbmE9aVsnbmFtZSddDQoJCQlubT1uYS5yc3BsaXQoIiAiKVswXQ0KCQkJaWQuYXBwZW5kKHVpZCsnfCcrbm0pDQoJZWxpZiBkZXZpbCA9PSI0IjoNCgkJb3Muc3lzdGVtKCJjbGVhciIpDQoJCXByaW50IGxvZ28NCgkJaWR0ID0gcmF3X2lucHV0KCJcMDMzWzE7OTdtWytdXDAzM1sxOzkzbSBJbnB1dCBQb3N0IElEL1VzZXJuYW1lIDpcMDMzWzE7OTZtICIpDQoJCXByaW50KCJcMDMzWzE7OTdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQ0KCQlwYXNzMT1yYXdfaW5wdXQoIlwwMzNbMTs5M21bMV1cMDMzWzE7OTdtIElucHV0IFBhc3N3b3JkICA6XDAzM1sxOzk2bSAiKQ0KCQlwYXNzMj1yYXdfaW5wdXQoIlwwMzNbMTs5M21bMl1cMDMzWzE7OTdtIElucHV0IFBhc3N3b3JkICA6XDAzM1sxOzk2bSAiKQ0KCQlwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCgkJdHJ5Og0KCQkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIi9saWtlcz9saW1pdD05OTk5OTk5JmFjY2Vzc190b2tlbj0iK3Rva2VuLCBoZWFkZXJzPWhlYWRlcikNCgkJCXogPSBqc29uLmxvYWRzKHIudGV4dCkNCgkJCWZvciBpIGluIHpbImRhdGEiXToNCgkJCQl1aWQ9aVsnaWQnXQ0KCQkJCW5hPWlbJ25hbWUnXQ0KCQkJCW5tPW5hLnJzcGxpdCgiICIpWzBdDQoJCQkJaWQuYXBwZW5kKHVpZCsnfCcrbm0pDQoJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCXByaW50KCdcblshXSBFcnJvciA0MDQgLiBQb3N0IElEICcraWR0KycgTWF5IE5vdCBCZSBWYWxpZCcpDQoJCQlyYXdfaW5wdXQoIlxuUHJlc3MgRW50ZXIgVG8gQmFjayIpDQoJCQl1bmlraygpDQoJICAgDQoJZWxpZiBkZXZpbCA9PSIwIjoNCgkJbWVudSgpDQoJZWxzZToNCgkJcHJpbnQgKCJbIV0gUGxlYXNlIFNlbGVjdCBhIFZhbGlkIE9wdGlvbiIpDQoJCWNyYWNrMigpDQoJcHJpbnQoIlwwMzNbMTs5N21b4pyTXVwwMzNbMTs5N20gVG90YWwgSURzIDpcMDMzWzE7OTdtICIrc3RyKGxlbihpZCkpKQ0KCXRpbWUuc2xlZXAoMC41KQ0KCXByaW50KCJcMDMzWzE7OTdtW1wwMzNbMTs5MW3inJNcMDMzWzE7OTdtXVwwMzNbMTs5Mm0gUmFuZG9tIENob2ljZSBQYXNzd29yZCBDbG9uaW5nXDAzM1sxOzBtIikNCgl0aW1lLnNsZWVwKDAuNSkNCglwcmludCgiXDAzM1sxOzk3bVtceDFiWzE7OTNt4pyTXDAzM1sxOzk3bV1cMDMzWzE7OTJtIFRvIFN0b3AgUHJvY2VzcyBQcmVzcyBDVFJMIFRoZW4gUHJlc3NcMDMzWzE7OTFtIHpcMDMzWzE7MG0iKQ0KCXRpbWUuc2xlZXAoMC41KQ0KCXByaW50KCJcMDMzWzE7OTdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQ0KCQ0KCQ0KICAgICAgICBkZWYgbWFpbihhcmcpOg0KCQl1c2VyPWFyZw0KCQl1aWQsbmFtZT11c2VyLnNwbGl0KCJ8IikNCgkJdHJ5Og0KCQkgICAgDQoJCSAgICBxID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IiArIHVpZCArICImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIgKyBwYXNzMSArICImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkgICAgZD1qc29uLmxvYWRzKHEpDQoJCSAgICBpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gZFsnZXJyb3JfbXNnJ106DQoJCSAgICAgICAgcHJpbnQoIlwwMzNbMTs5M21bXDAzM1sxOzk3bUNoZWNrXDAzM1sxOzkxbS1cMDMzWzE7OTdtcG9pbnRcMDMzWzE7OTNtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczErIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgIGNwPW9wZW4oImNwLnR4dCIsImEiKQ0KCQkgICAgICAgIGNwLndyaXRlKHVpZCsiIHwgIitwYXNzMSsiXG4iKQ0KCQkgICAgICAgIGNwLmNsb3NlKCkNCgkJICAgICAgICBjcHMuYXBwZW5kKHVpZCkNCgkJICAgIGVsc2U6DQoJCSAgICAJaWYgImFjY2Vzc190b2tlbiIgaW4gZDoNCgkJICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5MW1bXDAzM1sxOzkybVN1Y2Nlc3NmdWxcMDMzWzE7OTFtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczErIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICBvaz1vcGVuKCJvay50eHQiLCJhIikNCgkJICAgICAgICAgICAgb2sud3JpdGUodWlkKyIgfCAiK3Bhc3MxKyJcbiIpDQoJCSAgICAgICAgICAgIG9rLmNsb3NlKCkNCgkJICAgICAgICAgICAgb2tzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgZWxzZToNCgkJICAgICAgICAgIA0KCQkgICAgICAgICAgICBxID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IiArIHVpZCArICImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIgKyBwYXNzMiArICImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkgICAgICAgICAgICBkPWpzb24ubG9hZHMocSkNCgkJICAgICAgICAgICAgaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIGRbJ2Vycm9yX21zZyddOg0KCQkgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5M21bXDAzM1sxOzk3bUNoZWNrXDAzM1sxOzkxbS1cMDMzWzE7OTdtcG9pbnRcMDMzWzE7OTNtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczIrIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICAgICAgY3A9b3BlbigiY3AudHh0IiwiYSIpDQoJCSAgICAgICAgICAgICAgICBjcC53cml0ZSh1aWQrIiB8ICIrcGFzczIrIlxuIikNCgkJICAgICAgICAgICAgICAgIGNwLmNsb3NlKCkNCgkJICAgICAgICAgICAgICAgIGNwcy5hcHBlbmQodWlkKQ0KCQkgICAgICAgICAgICBlbHNlOg0KCQkgICAgICAgICAgICAgICAgaWYgJ2FjY2Vzc190b2tlbicgaW4gZDoNCgkJICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1sxOzkxbVtcMDMzWzE7OTJtU3VjY2Vzc2Z1bFwwMzNbMTs5MW1dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzMisiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICAgICAgb2s9b3Blbigib2sudHh0IiwiYSIpDQoJCSAgICAgICAgICAgICAgICAgICAgb2sud3JpdGUodWlkKyIgfCAiK3Bhc3MyKyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgb2suY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgICAgIG9rcy5hcHBlbmQodWlkKQ0KCQkJCQkJCQkJDQoJCQkJCQkJCQkJCQkJCQkNCgkJZXhjZXB0Og0KCQkJcGFzcw0KCQkNCglwID0gVGhyZWFkUG9vbCgzMCkNCglwLm1hcChtYWluLCBpZCkNCglwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCglwcmludCAoJ1wwMzNbMTs5N21b4pyTXVwwMzNbMTs5Mm0gUHJvY2VzcyBIYXMgQmVlbiBDb21wbGV0ZWQnKQ0KCXByaW50KCdcMDMzWzE7OTdtW1x4MWJbMTs5M23inJNceDFiWzE7OTdtXVwwMzNbMTs5Mm0gVG90YWxceDFiWzE7OTNtIENQIFwwMzNbMTs5MW0vXDAzM1sxOzkybU9LXDAzM1sxOzkzbTpceDFiWzE7OTdtXDAzM1swOzk3bSAgJytzdHIobGVuKGNwcykpKycvXDAzM1s7MzJtIFwwMzNbMDs5N20nK3N0cihsZW4ob2tzKSkpDQoJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJZG93bigpDQpkZWYgZG93bigpOg0KICAgIGRvdyA9IHJhd19pbnB1dCgiXDAzM1sxOzk3bVs/XVwwMzNbMTs5M20gRG8gWW9vdSBXYW50IFRvIERvd25sb2FkIENwIEZpbGU/XDAzM1sxOzk3bSAoWWVzL05vKSAiKQ0KICAgIGlmIGRvdyA9PSJ5ZXMiIG9yIGRvdyA9PSJ5IjoNCiAgICAgICAgb3Muc3lzdGVtKCJjbGVhciIpDQogICAgICAgIHByaW50IGxvZ28NCiAgICAgICAgZG93bmxvYWQoKQ0KICAgICAgICBwcmludCgiXG5cMDMzWzE7OTdtWyFdXDAzM1sxOzkzbSBQbGVhc2UgR2l2ZSBTdG9yYWdlIFBlcm1pc3Npb24gSWYgQXNrIikNCiAgICAgICAgb3Muc3lzdGVtKCJ0ZXJtdXgtc2V0dXAtc3RvcmFnZSIpDQogICAgICAgIG9zLnN5c3RlbSgiY3AgY3AudHh0IC9zZGNhcmQiKQ0KICAgICAgICBwcmludCgnXDAzM1sxOzkzbVvinJNdXDAzM1sxOzkybSBGaWxlIERvd25sb2FkZWQgU3VjY2Vzc2Z1bGx5JykNCiAgICAgICAgcHJpbnQoIlwwMzNbMTs5M21b4pyTXVwwMzNbMTs5M20gUGxlYXNlIE9wZW4gWW91ciBJbnRlcm5hbCBTdG9yYWdlIGFuZCBSZW5hbWUgVGhlIEZpbGUiKQ0KICAgICAgICByYXdfaW5wdXQoIlwwMzNbMTs5N21QcmVzcyBFbnRlciBUbyBSZXR1cm4gSW4gTWFpbiBNZW51ICIpDQogICAgICAgIGNyYWNrKCkNCiAgICBlbGlmIGRvdyA9PSJubyIgb3IgZG93PT0ibiI6DQogICAgICAgIGNyYWNrKCkNCiAgICBlbHNlOg0KICAgICAgICBwcmludCgiXDAzM1sxOzkxbVshXSBQbGVhc2UgU2VsZWN0IGEgVmFsaWQgT3B0aW9uICIpDQogICAgICAgIGRvd24oKQ0KCQkNCmRlZiByYW5kbSgpOg0KCWdsb2JhbCB0b2tlbg0KCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCXRyeToNCgkJdG9rZW49b3BlbigiLmxvZ2luLnR4dCIsInIiKS5yZWFkKCkNCglleGNlcHQgSU9FcnJvcjoNCgkJcHJpbnQoIlshXSBFcnJvciA0MDQgLiBUb2tlbiBOb3QgRm91bmQiKQ0KCQlvcy5zeXN0ZW0oInJtIC1yZiAubG9naW4udHh0IikNCgkJdGltZS5zbGVlcCgxKQ0KCQlsb2dpbigpDQoJb3Muc3lzdGVtKCJjbGVhciIpDQoJcHJpbnQgbG9nbw0KCW9zLnN5c3RlbSgicHl0aG9uMyAubG9hZGluZy5tZCIpDQogICAgICAgIHRpbWUuc2xlZXAoMSkNCiAgICAgICAgb3Muc3lzdGVtKCdjbGVhcicpDQogICAgICAgIHByaW50IGxvZ28NCglwcmludCAoIlwwMzNbMTs5MW1bXDAzM1sxOzkwbTFcMDMzWzE7OTFtXVwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+IFwwMzNbMTs5M21DcmFjayBGcm9tIEZyaWVuZCBMaXN0IikNCglwcmludCAoIlwwMzNbMTs5MW1bXDAzM1sxOzkwbTJcMDMzWzE7OTFtXVwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+IFwwMzNbMTs5M21DcmFjayBGcm9tIFB1YmxpYyBJRCIpDQoJcHJpbnQgKCJcMDMzWzE7OTFtW1wwMzNbMTs5MG0zXDAzM1sxOzkxbV1cMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTNtQ3JhY2sgRnJvbSBGb2xsb3dlcnMiKQ0KCXByaW50ICgiXDAzM1sxOzkxbVtcMDMzWzE7OTBtNFwwMzNbMTs5MW1dXDAzM1sxOzkwbT09XDAzM1sxOzkybT4gXDAzM1sxOzkzbUNyYWNrIEZyb20gUGFnZS9Hcm91cC9JRCBQb3N0IikNCglwcmludCAoJ1wwMzNbMTs5MW1bXDAzM1sxOzkwbTBcMDMzWzE7OTFtXVwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+IFwwMzNbMTs5MW1CYWNrJykNCglwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCglyYW5kbTIoKQ0KZGVmIHJhbmRtMigpOg0KCXNlbGVjdCA9IHJhd19pbnB1dCgiXG7ilbDilIDinqMgIikNCglpZD1bXQ0KCW9rcz1bXQ0KCWNwcz1bXQ0KCWlmIHNlbGVjdD09IjEiOg0KCQlvcy5zeXN0ZW0oImNsZWFyIikNCgkJcHJpbnQgbG9nbw0KCQlwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCgkJcHJpbnQoIlwwMzNbMTs5M21bMV1cMDMzWzE7OTdtIElucHV0IFBhc3N3b3JkICA6XDAzM1sxOzk2bSBmcmlzdG5hbWUxMjMgIikNCgkJcHJpbnQoIlwwMzNbMTs5M21bMl1cMDMzWzE7OTdtIElucHV0IFBhc3N3b3JkICA6XDAzM1sxOzk2bSBmaXJzdG5hbWUxMjM0IikNCgkJcHJpbnQzPXJhd19pbnB1dCgiXDAzM1sxOzkzbVszXVwwMzNbMTs5N20gSW5wdXQgUGFzc3dvcmQgOlwwMzNbMTs5Nm0gIikNCgkJcGFzczQ9cmF3X2lucHV0KCJcMDMzWzE7OTNtWzRdXDAzM1sxOzk3bSBJbnB1dCBQYXNzd29yZCAgOlwwMzNbMTs5Nm0gIikNCgkJcGFzczU9cmF3X2lucHV0KCJcMDMzWzE7OTNtWzVdXDAzM1sxOzk3bSBJbnB1dCBQYXNzd29yZCAgOlwwMzNbMTs5Nm0gIikNCgkJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJCXIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lL2ZyaWVuZHM/YWNjZXNzX3Rva2VuPSIrdG9rZW4sIGhlYWRlcnM9aGVhZGVyKQ0KCQl6ID0ganNvbi5sb2FkcyhyLnRleHQpDQoJCWZvciBzIGluIHpbImRhdGEiXToNCgkJCXVpZD1zWydpZCddDQoJCQluYT1zWyduYW1lJ10NCgkJCW5tPW5hLnJzcGxpdCgiICIpWzBdDQoJCQlpZC5hcHBlbmQodWlkKyd8JytubSkNCgllbGlmIHNlbGVjdCA9PSIyIjoNCgkJb3Muc3lzdGVtKCJjbGVhciIpDQoJCXByaW50IGxvZ28NCgkJaWR0ID0gcmF3X2lucHV0KCJcMDMzWzE7OTdtWytdXDAzM1sxOzkzbSBJbnB1dCBJRCA6XDAzM1sxOzk2bSAiKQ0KCQlwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCgkJcHJpbnQoIlwwMzNbMTs5M21bMV1cMDMzWzE7OTdtIElucHV0IFBhc3N3b3JkICA6XDAzM1sxOzk2bSBmcmlzdG5hbWUxMjMgIikNCgkJcHJpbnQoIlwwMzNbMTs5M21bMl1cMDMzWzE7OTdtIElucHV0IFBhc3N3b3JkICA6XDAzM1sxOzk2bSBmaXJzdG5hbWUxMjM0IikNCgkJcHJpbnQzPXJhd19pbnB1dCgiXDAzM1sxOzkzbVszXVwwMzNbMTs5N20gSW5wdXQgUGFzc3dvcmQgOlwwMzNbMTs5Nm0gIikNCgkJcGFzczQ9cmF3X2lucHV0KCJcMDMzWzE7OTNtWzRdXDAzM1sxOzk3bSBJbnB1dCBQYXNzd29yZCAgOlwwMzNbMTs5Nm0gIikNCgkJcGFzczU9cmF3X2lucHV0KCJcMDMzWzE7OTNtWzVdXDAzM1sxOzk3bSBJbnB1dCBQYXNzd29yZCAgOlwwMzNbMTs5Nm0gIikNCgkJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJCXRyeToNCgkJCXIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyI/YWNjZXNzX3Rva2VuPSIrdG9rZW4sIGhlYWRlcnM9aGVhZGVyKQ0KCQkJcSA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQkJcHJpbnQoIlwwMzNbMTs5MW1bXHgxYlsxOzkybeKck1wwMzNbMTs5MW1dXHgxYlsxOzkzbSBBY2NvdW50IE5hbWVcMDMzWzE7OTFtIDpceDFiWzE7OTJtICIrcVsibmFtZSJdKQ0KCQlleGNlcHQgS2V5RXJyb3I6DQoJCQlwcmludCgnXG5bIV0gRXJyb3IgNDA0IC4gSUQgTGluayAnK2lkdCsnIEhhdmUgUHJpdmFjeSBPbiBGcmllbmRsaXN0IE9SIElTIE5vdCBWYWxpZCcpDQoJCQlyYXdfaW5wdXQoIlxuUHJlc3MgRW50ZXIgVG8gQmFjayAiKQ0KCQkJcmFuZG0oKQ0KCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiL2ZyaWVuZHM/YWNjZXNzX3Rva2VuPSIrdG9rZW4sIGhlYWRlcnM9aGVhZGVyKQ0KCQl6ID0ganNvbi5sb2FkcyhyLnRleHQpDQoJCWZvciBpIGluIHpbImRhdGEiXToNCgkJCXVpZD1pWydpZCddDQoJCQluYT1pWyduYW1lJ10NCgkJCW5tPW5hLnJzcGxpdCgiICIpWzBdDQoJCQlpZC5hcHBlbmQodWlkKyd8JytubSkNCgllbGlmIHNlbGVjdCA9PSIzIjoNCgkJb3Muc3lzdGVtKCJjbGVhciIpDQoJCXByaW50IGxvZ28NCgkJaWR0ID0gcmF3X2lucHV0KCJcMDMzWzE7OTdtWytdXDAzM1sxOzkzbSBJbnB1dCBJRCA6XDAzM1sxOzk2bSAiKQ0KCQlwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCgkJcHJpbnQoIlwwMzNbMTs5M21bMV1cMDMzWzE7OTdtIElucHV0IFBhc3N3b3JkICA6XDAzM1sxOzk2bSBmcmlzdG5hbWUxMjMgIikNCgkJcHJpbnQoIlwwMzNbMTs5M21bMl1cMDMzWzE7OTdtIElucHV0IFBhc3N3b3JkICA6XDAzM1sxOzk2bSBmaXJzdG5hbWUxMjM0IikNCgkJcHJpbnQzPXJhd19pbnB1dCgiXDAzM1sxOzkzbVszXVwwMzNbMTs5N20gSW5wdXQgUGFzc3dvcmQgOlwwMzNbMTs5Nm0gIikNCgkJcGFzczQ9cmF3X2lucHV0KCJcMDMzWzE7OTNtWzRdXDAzM1sxOzk3bSBJbnB1dCBQYXNzd29yZCAgOlwwMzNbMTs5Nm0gIikNCgkJcGFzczU9cmF3X2lucHV0KCJcMDMzWzE7OTNtWzVdXDAzM1sxOzk3bSBJbnB1dCBQYXNzd29yZCAgOlwwMzNbMTs5Nm0gIikNCgkJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJCXRyeToNCgkJCXIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyI/YWNjZXNzX3Rva2VuPSIrdG9rZW4sIGhlYWRlcnM9aGVhZGVyKQ0KCQkJcSA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQkJcHJpbnQoIlwwMzNbMTs5MW1bXHgxYlsxOzkybeKck1wwMzNbMTs5MW1dXHgxYlsxOzkzbSBBY2NvdW50IE5hbWVcMDMzWzE7OTFtIDpceDFiWzE7OTJtICIrcVsibmFtZSJdKQ0KCQlleGNlcHQgS2V5RXJyb3I6DQoJCQlwcmludCgnXG5bIV0gRXJyb3IgNDA0IC4gSUQgTGluayAnK2lkdCsnIERvbm90IEhhdmUgRm9sbG93ZXJzIE9SIElTIE5vdCBWYWxpZCcpDQoJCQlyYXdfaW5wdXQoIlxuUHJlc3MgRW50ZXIgVG8gQmFjayAiKQ0KCQkJcmFuZG0oKQ0KCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiL3N1YnNjcmliZXJzP2FjY2Vzc190b2tlbj0iK3Rva2VuKyImbGltaXQ9NTAwMCIsIGhlYWRlcnM9aGVhZGVyKQ0KCQl6ID0ganNvbi5sb2FkcyhyLnRleHQpDQoJCWZvciBpIGluIHpbImRhdGEiXToNCgkJCXVpZD1pWydpZCddDQoJCQluYT1pWyduYW1lJ10NCgkJCW5tPW5hLnJzcGxpdCgiICIpWzBdDQoJCQlpZC5hcHBlbmQodWlkKyd8JytubSkNCgllbGlmIHNlbGVjdCA9PSI0IjoNCgkJb3Muc3lzdGVtKCJjbGVhciIpDQoJCXByaW50IGxvZ28NCgkJaWR0ID0gcmF3X2lucHV0KCJcMDMzWzE7OTdtWytdXDAzM1sxOzkzbSBJbnB1dCBQb3N0IElEIDpcMDMzWzE7OTZtICIpDQoJCXByaW50KCJcMDMzWzE7OTdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQ0KCQlwcmludCgiXDAzM1sxOzkzbVsxXVwwMzNbMTs5N20gSW5wdXQgUGFzc3dvcmQgIDpcMDMzWzE7OTZtIGZyaXN0bmFtZTEyMyAiKQ0KCQlwcmludCgiXDAzM1sxOzkzbVsyXVwwMzNbMTs5N20gSW5wdXQgUGFzc3dvcmQgIDpcMDMzWzE7OTZtIGZpcnN0bmFtZTEyMzQiKQ0KCQlwcmludDM9cmF3X2lucHV0KCJcMDMzWzE7OTNtWzNdXDAzM1sxOzk3bSBJbnB1dCBQYXNzd29yZCA6XDAzM1sxOzk2bSAiKQ0KCQlwYXNzND1yYXdfaW5wdXQoIlwwMzNbMTs5M21bNF1cMDMzWzE7OTdtIElucHV0IFBhc3N3b3JkICA6XDAzM1sxOzk2bSAiKQ0KCQlwYXNzNT1yYXdfaW5wdXQoIlwwMzNbMTs5M21bNV1cMDMzWzE7OTdtIElucHV0IFBhc3N3b3JkICA6XDAzM1sxOzk2bSAiKQ0KCQlwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCgkJdHJ5Og0KCQkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIi9saWtlcz9saW1pdD05OTk5OTk5JmFjY2Vzc190b2tlbj0iK3Rva2VuLCBoZWFkZXJzPWhlYWRlcikNCgkJCXogPSBqc29uLmxvYWRzKHIudGV4dCkNCgkJCWZvciBpIGluIHpbImRhdGEiXToNCgkJCQl1aWQ9aVsnaWQnXQ0KCQkJCW5hPWlbJ25hbWUnXQ0KCQkJCW5tPW5hLnJzcGxpdCgiICIpWzBdDQoJCQkJaWQuYXBwZW5kKHVpZCsnfCcrbm0pDQoJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCXByaW50KCdcblshXSBFcnJvciA0MDQgLiBQb3N0IElEICcraWR0KycgTWF5IE5vdCBCZSBWYWxpZCcpDQoJCQlyYXdfaW5wdXQoIlxuUHJlc3MgRW50ZXIgVG8gQmFjayIpDQoJCSAgICAgICAgcmFuZG0oKQ0KCSAgIA0KCWVsaWYgc2VsZWN0ID09IjAiOg0KCQltZW51KCkNCgllbHNlOg0KCQlwcmludCAoIlshXSBQbGVhc2UgU2VsZWN0IGEgVmFsaWQgT3B0aW9uIikNCgkJcmFuZG1tMigpDQoJcHJpbnQoIlwwMzNbMTs5N21b4pyTXVwwMzNbMTs5N20gVG90YWwgSURzIDpcMDMzWzE7OTdtICIrc3RyKGxlbihpZCkpKQ0KCXRpbWUuc2xlZXAoMC41KQ0KCXByaW50KCJcMDMzWzE7OTdtW1x4MWJbMTs5M23inJNcMDMzWzE7OTdtXVwwMzNbMTs5Mm0gVGhlIFByb2Nlc3MgSXMgUnVubmluZyBJbiBCYWNrZ3JvdW5kXDAzM1sxOzBtIikNCgl0aW1lLnNsZWVwKDAuNSkNCglwcmludCgiXDAzM1sxOzk3bVtcMDMzWzE7OTFt4pyTXDAzM1sxOzk3bV1cMDMzWzE7OTJtIFJhbmRvbSA1IENob2ljZSBQYXNzd29yZCBcMDMzWzE7MG0iKQ0KCXRpbWUuc2xlZXAoMC41KQ0KCXByaW50KCJcMDMzWzE7OTdtW1x4MWJbMTs5M23inJNcMDMzWzE7OTdtXVwwMzNbMTs5Mm0gVG8gU3RvcCBQcm9jZXNzIFByZXNzIENUUkwgVGhlbiBQcmVzc1wwMzNbMTs5MW0gelwwMzNbMTswbSIpDQoJdGltZS5zbGVlcCgwLjUpDQoJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJDQoJDQogICAgICAgIGRlZiBtYWluKGFyZyk6DQoJCXVzZXI9YXJnDQoJCXVpZCxuYW1lPXVzZXIuc3BsaXQoInwiKQ0KCQl0cnk6DQoJCSAgICBwYXNzMT1uYW1lKyIxMjMiDQoJCSAgICBxID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IiArIHVpZCArICImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIgKyBwYXNzMSArICImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkgICAgZD1qc29uLmxvYWRzKHEpDQoJCSAgICBpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gZFsnZXJyb3JfbXNnJ106DQoJCSAgICAgICAgcHJpbnQoIlwwMzNbMTs5M21bXDAzM1sxOzk3bUNoZWNrXDAzM1sxOzkxbS1cMDMzWzE7OTdtcG9pbnRcMDMzWzE7OTNtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczErIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgIGNwPW9wZW4oImNwLnR4dCIsImEiKQ0KCQkgICAgICAgIGNwLndyaXRlKHVpZCsiIHwgIitwYXNzMSsiXG4iKQ0KCQkgICAgICAgIGNwLmNsb3NlKCkNCgkJICAgICAgICBjcHMuYXBwZW5kKHVpZCkNCgkJICAgIGVsc2U6DQoJCSAgICAJaWYgImFjY2Vzc190b2tlbiIgaW4gZDoNCgkJICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5MW1bXDAzM1sxOzkybVN1Y2Nlc3NmdWxcMDMzWzE7OTFtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczErIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICBvaz1vcGVuKCJvay50eHQiLCJhIikNCgkJICAgICAgICAgICAgb2sud3JpdGUodWlkKyIgfCAiK3Bhc3MxKyJcbiIpDQoJCSAgICAgICAgICAgIG9rLmNsb3NlKCkNCgkJICAgICAgICAgICAgb2tzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgcGFzczI9bmFtZSsiNzg2Ig0KCQkgICAgICAgICAgICBxID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IiArIHVpZCArICImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIgKyBwYXNzMiArICImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkgICAgICAgICAgICBkPWpzb24ubG9hZHMocSkNCgkJICAgICAgICAgICAgaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIGRbJ2Vycm9yX21zZyddOg0KCQkgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5M21bXDAzM1sxOzk3bUNoZWNrXDAzM1sxOzkxbS1cMDMzWzE7OTdtcG9pbnRcMDMzWzE7OTNtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczIrIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICAgICAgY3A9b3BlbigiY3AudHh0IiwiYSIpDQoJCSAgICAgICAgICAgICAgICBjcC53cml0ZSh1aWQrIiB8ICIrcGFzczIrIlxuIikNCgkJICAgICAgICAgICAgICAgIGNwLmNsb3NlKCkNCgkJICAgICAgICAgICAgICAgIGNwcy5hcHBlbmQodWlkKQ0KCQkgICAgICAgICAgICBlbHNlOg0KCQkgICAgICAgICAgICAgICAgaWYgJ2FjY2Vzc190b2tlbicgaW4gZDoNCgkJICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1sxOzkxbVtcMDMzWzE7OTJtU3VjY2Vzc2Z1bFwwMzNbMTs5MW1dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzMisiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICAgICAgb2s9b3Blbigib2sudHh0IiwiYSIpDQoJCSAgICAgICAgICAgICAgICAgICAgb2sud3JpdGUodWlkKyIgfCAiK3Bhc3MyKyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgb2suY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgICAgIG9rcy5hcHBlbmQodWlkKQ0KCQkgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICANCgkJICAgICAgICAgICAgICAgICAgICBxID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IiArIHVpZCArICImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIgKyBwYXNzMyArICImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkgICAgICAgICAgICAgICAgICAgIGQ9anNvbi5sb2FkcyhxKQ0KCQkgICAgICAgICAgICAgICAgICAgIGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBkWydlcnJvcl9tc2cnXToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5M21bXDAzM1sxOzk3bUNoZWNrXDAzM1sxOzkxbS1cMDMzWzE7OTdtcG9pbnRcMDMzWzE7OTNtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczMrIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICBjcD1vcGVuKCJjcC50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgY3Aud3JpdGUodWlkKyIgfCAiK3Bhc3MzKyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgIGNwLmNsb3NlKCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgY3BzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ2FjY2Vzc190b2tlbicgaW4gZDoNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTFtW1wwMzNbMTs5Mm1TdWNjZXNzZnVsXDAzM1sxOzkxbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3MzKyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rPW9wZW4oIm9rLnR4dCIsImEiKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2sud3JpdGUodWlkKyIgfCAiK3Bhc3MzKyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICBvay5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICBva3MuYXBwZW5kKHVpZCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgcSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIgKyB1aWQgKyAiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iICsgcGFzczQgKyAiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ9anNvbi5sb2FkcyhxKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIGRbJ2Vycm9yX21zZyddOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTRtW1wwMzNbMTs5N21DaGVjay1Qb2ludFwwMzNbMTs5NG1dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzNCsiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3A9b3BlbigiY3AudHh0IiwiYSIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3Aud3JpdGUodWlkKyIgfCAiK3Bhc3M0KyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3AuY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwcy5hcHBlbmQodWlkKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAnYWNjZXNzX3Rva2VuJyBpbiBkOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1sxOzkxbVtcMDMzWzE7OTJtU3VjY2Vzc2Z1bFwwMzNbMTs5MW1dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzNCsiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rPW9wZW4oIm9rLnR4dCIsImEiKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvay53cml0ZSh1aWQrIiB8ICIrcGFzczQrIlxuIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2suY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBva3MuYXBwZW5kKHVpZCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIgKyB1aWQgKyAiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iICsgcGFzczUgKyAiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZD1qc29uLmxvYWRzKHEpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBkWydlcnJvcl9tc2cnXToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTNtW1wwMzNbMTs5N21DaGVja1wwMzNbMTs5MW0tXDAzM1sxOzk3bXBvaW50XDAzM1sxOzkzbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3M1KyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwPW9wZW4oImNwLnR4dCIsImEiKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3Aud3JpdGUodWlkKyIgfCAiK3Bhc3M1KyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcC5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKHVpZCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICdhY2Nlc3NfdG9rZW4nIGluIGQ6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5NG1bXDAzM1sxOzkybVN1Y2Nlc3NmdWxsXDAzM1sxOzk0bV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3M1KyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvaz1vcGVuKCJvay50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvay53cml0ZSh1aWQrIiB8ICIrcGFzczUrIlxuIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvay5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2tzLmFwcGVuZCh1aWQpDQoJCQkJCQkJCQkJCQkJCQkNCgkJZXhjZXB0Og0KCQkJcGFzcw0KCQkNCglwID0gVGhyZWFkUG9vbCgzMCkNCglwLm1hcChtYWluLCBpZCkNCglwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCglwcmludCAoJ1wwMzNbMTs5N21b4pyTXVwwMzNbMTs5Mm0gUHJvY2VzcyBIYXMgQmVlbiBDb21wbGV0ZWQnKQ0KCXByaW50KCdcMDMzWzE7OTdtW1x4MWJbMTs5M23inJNceDFiWzE7OTdtXVwwMzNbMTs5Mm0gVG90YWxceDFiWzE7OTNtIENQIFwwMzNbMTs5MW0vXDAzM1sxOzkybU9LXDAzM1sxOzkzbTpceDFiWzE7OTdtXDAzM1swOzk3bSAgJytzdHIobGVuKGNwcykpKycvXDAzM1s7MzJtIFwwMzNbMDs5N20nK3N0cihsZW4ob2tzKSkpDQoJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJZG93bigpDQpkZWYgZG93bigpOg0KICAgIGRvdyA9IHJhd19pbnB1dCgiXDAzM1sxOzk3bVs/XVwwMzNbMTs5M20gRG8gWW9vdSBXYW50IFRvIERvd25sb2FkIENwIEZpbGU/XDAzM1sxOzk3bSAoWWVzL05vKSAiKQ0KICAgIGlmIGRvdyA9PSJ5ZXMiIG9yIGRvdyA9PSJ5IjoNCiAgICAgICAgb3Muc3lzdGVtKCJjbGVhciIpDQogICAgICAgIHByaW50IGxvZ28NCiAgICAgICAgZG93bmxvYWQoKQ0KICAgICAgICBwcmludCgiXG5cMDMzWzE7OTdtWyFdXDAzM1sxOzkzbSBQbGVhc2UgR2l2ZSBTdG9yYWdlIFBlcm1pc3Npb24gSWYgQXNrIikNCiAgICAgICAgb3Muc3lzdGVtKCJ0ZXJtdXgtc2V0dXAtc3RvcmFnZSIpDQogICAgICAgIG9zLnN5c3RlbSgiY3AgY3AudHh0IC9zZGNhcmQiKQ0KICAgICAgICBwcmludCgnXDAzM1sxOzkzbVvinJNdXDAzM1sxOzkybSBGaWxlIERvd25sb2FkZWQgU3VjY2Vzc2Z1bGx5JykNCiAgICAgICAgcHJpbnQoIlwwMzNbMTs5M21b4pyTXVwwMzNbMTs5M20gUGxlYXNlIE9wZW4gWW91ciBJbnRlcm5hbCBTdG9yYWdlIGFuZCBSZW5hbWUgVGhlIEZpbGUiKQ0KICAgICAgICByYXdfaW5wdXQoIlwwMzNbMTs5N21QcmVzcyBFbnRlciBUbyBSZXR1cm4gSW4gTWFpbiBNZW51ICIpDQogICAgICAgIGNyYWNrKCkNCiAgICBlbGlmIGRvdyA9PSJubyIgb3IgZG93PT0ibiI6DQogICAgICAgIGNyYWNrKCkNCiAgICBlbHNlOg0KICAgICAgICBwcmludCgiXDAzM1sxOzkxbVshXSBQbGVhc2UgU2VsZWN0IGEgVmFsaWQgT3B0aW9uICIpDQogICAgICAgIGRvd24oKQ0KCQkNCmRlZiBtb3JlYygpOg0KICAgIG9zLnN5c3RlbSgiY2xlYXIiKQ0KICAgIHByaW50IGxvZ28NCiAgICBvcy5zeXN0ZW0oInB5dGhvbjMgLmxvYWRpbmcubWQiKQ0KICAgIHRpbWUuc2xlZXAoMSkNCiAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICBwcmludCBsb2dvDQogICAgcHJpbnQoIlwwMzNbMTs5MW1bXDAzM1sxOzkwbTFcMDMzWzE7OTFtXVwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+IFwwMzNbMTs5N21SYW5kb20gQmFuZ2xhZGVzaCBDbG9uaW5nIikNCiAgICBwcmludCgiXDAzM1sxOzkxbVtcMDMzWzE7OTBtMlwwMzNbMTs5MW1dXDAzM1sxOzkwbT09XDAzM1sxOzkybT4gXDAzM1sxOzk3bVJhbmRvbSBJbmRpYSBDbG9uaW5nIikNCiAgICBwcmludCgiXDAzM1sxOzkxbVtcMDMzWzE7OTBtMFwwMzNbMTs5MW1dXDAzM1sxOzkwbT09XDAzM1sxOzkybT4gXDAzM1sxOzkxbUJhY2siKQkNCiAgICB0aW1lLnNsZWVwKDAuNSkNCiAgICBwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCiAgICBtb3JlY19tYW4oKQ0KZGVmIG1vcmVjX21hbigpOg0KICAgIG9wdGlvbiA9IHJhd19pbnB1dCgiXG7ilbDilIDinqMgIikNCiAgICBpZiBvcHRpb24gPT0iMSI6DQogICAgICAgIGJhbmdsYSgpDQogICAgaWYgb3B0aW9uID09IjIiOg0KICAgICAgICBpbmRpYWEoKQ0KICAgIGlmIG9wdGlvbiA9PSIwIjoJDQogICAgICAgICAgbWVudSgpDQogICAgZWxzZToNCiAgICAgICAgICBwcmludCAoIlshXSBQbGVhc2UgU2VsZWN0IGEgVmFsaWQgT3B0aW9uIikNCiAgICAgICAgICBtb3JlY19tYW4oKQkJDQoJDQpkZWYgYmFuZ2xhKCk6DQoJZ2xvYmFsIHRva2VuDQoJb3Muc3lzdGVtKCJjbGVhciIpDQoJdHJ5Og0KCQl0b2tlbj1vcGVuKCIubG9naW4udHh0IiwiciIpLnJlYWQoKQ0KCWV4Y2VwdCBJT0Vycm9yOg0KCQlwcmludCgiWyFdIEVycm9yIDQwNCAuIFRva2VuIE5vdCBGb3VuZCIpDQoJCW9zLnN5c3RlbSgicm0gLXJmIC5sb2dpbi50eHQiKQ0KCQl0aW1lLnNsZWVwKDEpDQoJCWxvZ2luKCkNCglvcy5zeXN0ZW0oImNsZWFyIikNCglwcmludCBsb2dvDQoJcHJpbnQgKCJcMDMzWzE7OTNtW1wwMzNbMTs5MG0xXHgxYlsxOzkzbV1cMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTNtQ3JhY2sgRnJvbSBGcmllbmQgTGlzdCIpDQoJcHJpbnQgKCJcMDMzWzE7OTNtW1wwMzNbMTs5MG0yXHgxYlsxOzkzbV1cMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTNtQ3JhY2sgRnJvbSBQdWJsaWMgSUQiKQ0KCXByaW50ICgiXDAzM1sxOzkzbVtcMDMzWzE7OTBtM1x4MWJbMTs5M21dXDAzM1sxOzkwbT09XDAzM1sxOzkybT4gXDAzM1sxOzkzbUNyYWNrIEZyb20gRm9sbG93ZXJzIikNCglwcmludCAoIlwwMzNbMTs5M21bXDAzM1sxOzkwbTRceDFiWzE7OTNtXVwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+IFwwMzNbMTs5M21DcmFjayBGcm9tIFBhZ2UvR3JvdXAvSUQgUG9zdCIpDQoJcHJpbnQgKCdcMDMzWzE7OTNtW1wwMzNbMTs5MG0wXHgxYlsxOzkzbV1cMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTNtQmFjaycpDQoJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJYmFuZ2xhMigpDQpkZWYgYmFuZ2xhMigpOg0KCXNlbGVjdCA9IHJhd19pbnB1dCgiXG7ilbDilIDinqMgIikNCglpZD1bXQ0KCW9rcz1bXQ0KCWNwcz1bXQ0KCWlmIHNlbGVjdD09IjEiOg0KCQlvcy5zeXN0ZW0oImNsZWFyIikNCgkJcHJpbnQgbG9nbw0KCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS9tZS9mcmllbmRzP2FjY2Vzc190b2tlbj0iK3Rva2VuLCBoZWFkZXJzPWhlYWRlcikNCgkJeiA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQlmb3IgcyBpbiB6WyJkYXRhIl06DQoJCQl1aWQ9c1snaWQnXQ0KCQkJbmE9c1snbmFtZSddDQoJCQlubT1uYS5yc3BsaXQoIiAiKVswXQ0KCQkJaWQuYXBwZW5kKHVpZCsnfCcrbm0pDQoJZWxpZiBzZWxlY3QgPT0iMiI6DQoJCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCQlwcmludCBsb2dvDQoJCWlkdCA9IHJhd19pbnB1dCgiXDAzM1sxOzk3bVsrXVwwMzNbMTs5M20gSW5wdXQgSUQvVXNlcm5hbWUgOlwwMzNbMTs5Nm0gIikNCgkJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCQlwcmludCBsb2dvDQoJCXRyeToNCgkJCXIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyI/YWNjZXNzX3Rva2VuPSIrdG9rZW4sIGhlYWRlcnM9aGVhZGVyKQ0KCQkJcSA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQkJcHJpbnQoIlwwMzNbMTs5MW1bXHgxYlsxOzkybeKck1wwMzNbMTs5MW1dXHgxYlsxOzkzbSBBY2NvdW50IE5hbWVcMDMzWzE7OTFtIDpceDFiWzE7OTJtICIrcVsibmFtZSJdKQ0KCQlleGNlcHQgS2V5RXJyb3I6DQoJCQlwcmludCgnXG5bIV0gRXJyb3IgNDA0IC4gSUQgTGluayAnK2lkdCsnIEhhdmUgUHJpdmFjeSBPbiBGcmllbmRsaXN0IE9SIElTIE5vdCBWYWxpZCcpDQoJCQlyYXdfaW5wdXQoIlxuUHJlc3MgRW50ZXIgVG8gQmFjayAiKQ0KCQkJY3JhY2soKQ0KCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiL2ZyaWVuZHM/YWNjZXNzX3Rva2VuPSIrdG9rZW4sIGhlYWRlcnM9aGVhZGVyKQ0KCQl6ID0ganNvbi5sb2FkcyhyLnRleHQpDQoJCWZvciBpIGluIHpbImRhdGEiXToNCgkJCXVpZD1pWydpZCddDQoJCQluYT1pWyduYW1lJ10NCgkJCW5tPW5hLnJzcGxpdCgiICIpWzBdDQoJCQlpZC5hcHBlbmQodWlkKyd8JytubSkNCgllbGlmIHNlbGVjdCA9PSIzIjoNCgkJb3Muc3lzdGVtKCJjbGVhciIpDQoJCXByaW50IGxvZ28NCgkJaWR0ID0gcmF3X2lucHV0KCJcMDMzWzE7OTdtWytdXDAzM1sxOzkzbSBJbnB1dCBJRC9Vc2VybmFtZSA6XDAzM1sxOzk2bSAiKQ0KCQlwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCgkJb3Muc3lzdGVtKCJjbGVhciIpDQoJCXByaW50IGxvZ28NCgkJdHJ5Og0KCQkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIj9hY2Nlc3NfdG9rZW49Iit0b2tlbiwgaGVhZGVycz1oZWFkZXIpDQoJCQlxID0ganNvbi5sb2FkcyhyLnRleHQpDQoJCQlwcmludCgiXDAzM1sxOzkxbVtceDFiWzE7OTJt4pyTXDAzM1sxOzkxbV1ceDFiWzE7OTNtIEFjY291bnQgTmFtZVwwMzNbMTs5MW0gOlx4MWJbMTs5Mm0gIitxWyJuYW1lIl0pDQoJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCXByaW50KCdcblshXSBFcnJvciA0MDQgLiBJRCBMaW5rICcraWR0KycgRG9ub3QgSGF2ZSBGb2xsb3dlcnMgT1IgSVMgTm90IFZhbGlkJykNCgkJCXJhd19pbnB1dCgiXG5QcmVzcyBFbnRlciBUbyBCYWNrICIpDQoJCQljcmFjaygpDQoJCXIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyIvc3Vic2NyaWJlcnM/YWNjZXNzX3Rva2VuPSIrdG9rZW4rIiZsaW1pdD01MDAwIiwgaGVhZGVycz1oZWFkZXIpDQoJCXogPSBqc29uLmxvYWRzKHIudGV4dCkNCgkJZm9yIGkgaW4gelsiZGF0YSJdOg0KCQkJdWlkPWlbJ2lkJ10NCgkJCW5hPWlbJ25hbWUnXQ0KCQkJbm09bmEucnNwbGl0KCIgIilbMF0NCgkJCWlkLmFwcGVuZCh1aWQrJ3wnK25tKQ0KCWVsaWYgc2VsZWN0ID09IjQiOg0KCQlvcy5zeXN0ZW0oImNsZWFyIikNCgkJcHJpbnQgbG9nbw0KCQlpZHQgPSByYXdfaW5wdXQoIlwwMzNbMTs5N21bK11cMDMzWzE7OTNtIElucHV0IElEL1VzZXJuYW1lIDpcMDMzWzE7OTZtICIpDQoJCXByaW50KCJcMDMzWzE7OTdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQ0KCQlvcy5zeXN0ZW0oImNsZWFyIikNCgkJcHJpbnQgbG9nbw0KCQl0cnk6DQoJCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiL2xpa2VzP2xpbWl0PTk5OTk5OTkmYWNjZXNzX3Rva2VuPSIrdG9rZW4sIGhlYWRlcnM9aGVhZGVyKQ0KCQkJeiA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQkJZm9yIGkgaW4gelsiZGF0YSJdOg0KCQkJCXVpZD1pWydpZCddDQoJCQkJbmE9aVsnbmFtZSddDQoJCQkJbm09bmEucnNwbGl0KCIgIilbMF0NCgkJCQlpZC5hcHBlbmQodWlkKyd8JytubSkNCgkJZXhjZXB0IEtleUVycm9yOg0KCQkJcHJpbnQoJ1xuWyFdIEVycm9yIDQwNCAuIFBvc3QgSUQgJytpZHQrJyBNYXkgTm90IEJlIFZhbGlkJykNCgkJCXJhd19pbnB1dCgiXG5QcmVzcyBFbnRlciBUbyBCYWNrIikNCgkJCWJhbmdsYSgpDQoJICAgDQoJZWxpZiBzZWxlY3QgPT0iMCI6DQoJCW1lbnUoKQ0KCWVsc2U6DQoJCXByaW50ICgiWyFdIFBsZWFzZSBTZWxlY3QgYSBWYWxpZCBPcHRpb24iKQ0KCQliYW5nbGEyKCkNCglwcmludCgiXDAzM1sxOzk3bVvinJNdXDAzM1sxOzk3bSBUb3RhbCBJRHMgOlwwMzNbMTs5N20gIitzdHIobGVuKGlkKSkpDQoJdGltZS5zbGVlcCgwLjUpDQoJcHJpbnQoIlwwMzNbMTs5N21bXHgxYlsxOzkzbeKck1wwMzNbMTs5N21dXDAzM1sxOzkybSBUaGUgUHJvY2VzcyBJcyBSdW5uaW5nIEluIEJhY2tncm91bmRcMDMzWzE7MG0iKQ0KCXRpbWUuc2xlZXAoMC41KQ0KCXByaW50KCJcMDMzWzE7OTdtW1x4MWJbMTs5M23inJNcMDMzWzE7OTdtXVwwMzNbMTs5Mm0gVG8gU3RvcCBQcm9jZXNzIFByZXNzIENUUkwgVGhlbiBQcmVzc1wwMzNbMTs5MW0gelwwMzNbMTswbSIpDQoJdGltZS5zbGVlcCgwLjUpDQoJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJDQoJDQoJDQogICAgICAgIGRlZiBtYWluKGFyZyk6DQoJCXVzZXI9YXJnDQoJCXVpZCxuYW1lPXVzZXIuc3BsaXQoInwiKQ0KCQl0cnk6DQoJCSAgICBwYXNzMT1uYW1lKyIxMjMiDQoJCSAgICBxID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IiArIHVpZCArICImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIgKyBwYXNzMSArICImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkgICAgZD1qc29uLmxvYWRzKHEpDQoJCSAgICBpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gZFsnZXJyb3JfbXNnJ106DQoJCSAgICAgICAgcHJpbnQoIlwwMzNbMTs5M21bXDAzM1sxOzk3bUNoZWNrXDAzM1sxOzkxbS1cMDMzWzE7OTdtcG9pbnRcMDMzWzE7OTNtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczErIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgIGNwPW9wZW4oImNwLnR4dCIsImEiKQ0KCQkgICAgICAgIGNwLndyaXRlKHVpZCsiIHwgIitwYXNzMSsiXG4iKQ0KCQkgICAgICAgIGNwLmNsb3NlKCkNCgkJICAgICAgICBjcHMuYXBwZW5kKHVpZCkNCgkJICAgIGVsc2U6DQoJCSAgICAJaWYgImFjY2Vzc190b2tlbiIgaW4gZDoNCgkJICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5MW1bXDAzM1sxOzkybVN1Y2Nlc3NmdWxcMDMzWzE7OTFtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczErIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICBvaz1vcGVuKCJvay50eHQiLCJhIikNCgkJICAgICAgICAgICAgb2sud3JpdGUodWlkKyIgfCAiK3Bhc3MxKyJcbiIpDQoJCSAgICAgICAgICAgIG9rLmNsb3NlKCkNCgkJICAgICAgICAgICAgb2tzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgcGFzczI9bmFtZSsiMTIzNCINCgkJICAgICAgICAgICAgcSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIgKyB1aWQgKyAiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iICsgcGFzczIgKyAiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJICAgICAgICAgICAgZD1qc29uLmxvYWRzKHEpDQoJCSAgICAgICAgICAgIGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBkWydlcnJvcl9tc2cnXToNCgkJICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTNtW1wwMzNbMTs5N21DaGVja1wwMzNbMTs5MW0tXDAzM1sxOzk3bXBvaW50XDAzM1sxOzkzbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3MyKyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgIGNwPW9wZW4oImNwLnR4dCIsImEiKQ0KCQkgICAgICAgICAgICAgICAgY3Aud3JpdGUodWlkKyIgfCAiK3Bhc3MyKyJcbiIpDQoJCSAgICAgICAgICAgICAgICBjcC5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKHVpZCkNCgkJICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgIGlmICdhY2Nlc3NfdG9rZW4nIGluIGQ6DQoJCSAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5MW1bXDAzM1sxOzkybVN1Y2Nlc3NmdWxcMDMzWzE7OTFtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczIrIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICAgICAgICAgIG9rPW9wZW4oIm9rLnR4dCIsImEiKQ0KCQkgICAgICAgICAgICAgICAgICAgIG9rLndyaXRlKHVpZCsiIHwgIitwYXNzMisiXG4iKQ0KCQkgICAgICAgICAgICAgICAgICAgIG9rLmNsb3NlKCkNCgkJICAgICAgICAgICAgICAgICAgICBva3MuYXBwZW5kKHVpZCkNCgkJICAgICAgICAgICAgICAgIGVsc2U6DQoJCSAgICAgICAgICAgICAgICAgICAgcGFzczM9bmFtZSsiMTIzNDUiDQoJCSAgICAgICAgICAgICAgICAgICAgcSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIgKyB1aWQgKyAiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iICsgcGFzczMgKyAiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJICAgICAgICAgICAgICAgICAgICBkPWpzb24ubG9hZHMocSkNCgkJICAgICAgICAgICAgICAgICAgICBpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gZFsnZXJyb3JfbXNnJ106DQoJCSAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTNtW1wwMzNbMTs5N21DaGVja1wwMzNbMTs5MW0tXDAzM1sxOzk3bXBvaW50XDAzM1sxOzkzbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3MzKyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgY3A9b3BlbigiY3AudHh0IiwiYSIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgIGNwLndyaXRlKHVpZCsiIHwgIitwYXNzMysiXG4iKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICBjcC5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgIGNwcy5hcHBlbmQodWlkKQ0KCQkgICAgICAgICAgICAgICAgICAgIGVsc2U6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgIGlmICdhY2Nlc3NfdG9rZW4nIGluIGQ6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1sxOzkxbVtcMDMzWzE7OTJtU3VjY2Vzc2Z1bFwwMzNbMTs5MW1dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzMysiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICBvaz1vcGVuKCJvay50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rLndyaXRlKHVpZCsiIHwgIitwYXNzMysiXG4iKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2suY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2tzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzND0iQmFuZ2xhZGVzaCINCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIHEgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iICsgdWlkICsgIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IiArIHBhc3M0ICsgIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIsIGhlYWRlcnM9aGVhZGVyKS50ZXh0DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICBkPWpzb24ubG9hZHMocSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBkWydlcnJvcl9tc2cnXToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1sxOzk0bVtcMDMzWzE7OTdtQ2hlY2stUG9pbnRcMDMzWzE7OTRtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczQrIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwPW9wZW4oImNwLnR4dCIsImEiKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwLndyaXRlKHVpZCsiIHwgIitwYXNzNCsiXG4iKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwLmNsb3NlKCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKHVpZCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ2FjY2Vzc190b2tlbicgaW4gZDoNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5MW1bXDAzM1sxOzkybVN1Y2Nlc3NmdWxcMDMzWzE7OTFtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczQrIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvaz1vcGVuKCJvay50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2sud3JpdGUodWlkKyIgfCAiK3Bhc3M0KyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rLmNsb3NlKCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2tzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzczU9IjEwMjAzMCINCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIgKyB1aWQgKyAiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iICsgcGFzczUgKyAiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZD1qc29uLmxvYWRzKHEpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBkWydlcnJvcl9tc2cnXToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTNtW1wwMzNbMTs5N21DaGVja1wwMzNbMTs5MW0tXDAzM1sxOzk3bXBvaW50XDAzM1sxOzkzbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3M1KyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwPW9wZW4oImNwLnR4dCIsImEiKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3Aud3JpdGUodWlkKyIgfCAiK3Bhc3M1KyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcC5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKHVpZCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICdhY2Nlc3NfdG9rZW4nIGluIGQ6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5NG1bXDAzM1sxOzkybVN1Y2Nlc3NmdWxsXDAzM1sxOzk0bV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3M1KyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvaz1vcGVuKCJvay50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvay53cml0ZSh1aWQrIiB8ICIrcGFzczUrIlxuIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvay5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2tzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3M2PSI1NTY2NzciDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIgKyB1aWQgKyAiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iICsgcGFzczYgKyAiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkPWpzb24ubG9hZHMocSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gZFsnZXJyb3JfbXNnJ106DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1sxOzkzbVtcMDMzWzE7OTdtQ2hlY2tcMDMzWzE7OTFtLVwwMzNbMTs5N21wb2ludFwwMzNbMTs5M21dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzNisiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcD1vcGVuKCJjcC50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwLndyaXRlKHVpZCsiIHwgIitwYXNzNisiXG4iKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3AuY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3BzLmFwcGVuZCh1aWQpDQoJCQkJCQkJCQkNCgkJCQkJCQkJCQkJCQkJCQ0KCQlleGNlcHQ6DQoJCQlwYXNzDQoJCQ0KCXAgPSBUaHJlYWRQb29sKDMwKQ0KCXAubWFwKG1haW4sIGlkKQ0KCXByaW50KCJcMDMzWzE7OTdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQ0KCXByaW50ICgnXDAzM1sxOzk3bVvinJNdXDAzM1sxOzkybSBQcm9jZXNzIEhhcyBCZWVuIENvbXBsZXRlZCcpDQoJcHJpbnQoJ1wwMzNbMTs5N21bXHgxYlsxOzkzbeKck1x4MWJbMTs5N21dXDAzM1sxOzkybSBUb3RhbFx4MWJbMTs5M20gQ1AgXDAzM1sxOzkxbS9cMDMzWzE7OTJtT0tcMDMzWzE7OTNtOlx4MWJbMTs5N21cMDMzWzA7OTdtICAnK3N0cihsZW4oY3BzKSkrJy9cMDMzWzszMm0gXDAzM1swOzk3bScrc3RyKGxlbihva3MpKSkNCglwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCglkb3duKCkNCmRlZiBkb3duKCk6DQogICAgZG93ID0gcmF3X2lucHV0KCJcMDMzWzE7OTdtWz9dXDAzM1sxOzkzbSBEbyBZb291IFdhbnQgVG8gRG93bmxvYWQgQ3AgRmlsZT9cMDMzWzE7OTdtIChZZXMvTm8pICIpDQogICAgaWYgZG93ID09InllcyIgb3IgZG93ID09InkiOg0KICAgICAgICBvcy5zeXN0ZW0oImNsZWFyIikNCiAgICAgICAgcHJpbnQgbG9nbw0KICAgICAgICBkb3dubG9hZCgpDQogICAgICAgIHByaW50KCJcblwwMzNbMTs5N21bIV1cMDMzWzE7OTNtIFBsZWFzZSBHaXZlIFN0b3JhZ2UgUGVybWlzc2lvbiBJZiBBc2siKQ0KICAgICAgICBvcy5zeXN0ZW0oInRlcm11eC1zZXR1cC1zdG9yYWdlIikNCiAgICAgICAgb3Muc3lzdGVtKCJjcCBjcC50eHQgL3NkY2FyZCIpDQogICAgICAgIHByaW50KCdcMDMzWzE7OTNtW+Kck11cMDMzWzE7OTJtIEZpbGUgRG93bmxvYWRlZCBTdWNjZXNzZnVsbHknKQ0KICAgICAgICBwcmludCgiXDAzM1sxOzkzbVvinJNdXDAzM1sxOzkzbSBQbGVhc2UgT3BlbiBZb3VyIEludGVybmFsIFN0b3JhZ2UgYW5kIFJlbmFtZSBUaGUgRmlsZSIpDQogICAgICAgIHJhd19pbnB1dCgiXDAzM1sxOzk3bVByZXNzIEVudGVyIFRvIFJldHVybiBJbiBNYWluIE1lbnUgIikNCiAgICAgICAgY3JhY2soKQ0KICAgIGVsaWYgZG93ID09Im5vIiBvciBkb3c9PSJuIjoNCiAgICAgICAgY3JhY2soKQ0KICAgIGVsc2U6DQogICAgICAgIHByaW50KCJcMDMzWzE7OTFtWyFdIFBsZWFzZSBTZWxlY3QgYSBWYWxpZCBPcHRpb24gIikNCiAgICAgICAgZG93bigpDQoJCQ0KZGVmIGluZGlhYSgpOg0KCWdsb2JhbCB0b2tlbg0KCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCXRyeToNCgkJdG9rZW49b3BlbigiLmxvZ2luLnR4dCIsInIiKS5yZWFkKCkNCglleGNlcHQgSU9FcnJvcjoNCgkJcHJpbnQoIlshXSBFcnJvciA0MDQgLiBUb2tlbiBOb3QgRm91bmQiKQ0KCQlvcy5zeXN0ZW0oInJtIC1yZiAubG9naW4udHh0IikNCgkJdGltZS5zbGVlcCgxKQ0KCQlsb2dpbigpDQoJb3Muc3lzdGVtKCJjbGVhciIpDQoJcHJpbnQgbG9nbw0KCW9zLnN5c3RlbSgicHl0aG9uMyAubG9hZGluZy5tZCIpDQogICAgICAgIHRpbWUuc2xlZXAoMSkNCiAgICAgICAgb3Muc3lzdGVtKCdjbGVhcicpDQogICAgICAgIHByaW50IGxvZ28NCglrZ2YgKCJJZiB5b3UgZnJvbSBpbmRpYSwgRmlyc3QgVXNlIFVTQSBwcm94eSB0byBDbG9uaW5nIikNCglwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCglwcmludCAoIlwwMzNbMTs5Mm1bXDAzM1sxOzkwbTFceDFiWzE7OTJtXVwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+IFwwMzNbMTs5MW1DcmFjayBGcm9tIEZyaWVuZCBMaXN0IikNCglwcmludCAoIlwwMzNbMTs5Mm1bXDAzM1sxOzkwbTJceDFiWzE7OTJtXVwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+IFwwMzNbMTs5MW1DcmFjayBGcm9tIFB1YmxpYyBJRCIpDQoJcHJpbnQgKCJcMDMzWzE7OTJtW1wwMzNbMTs5MG0zXHgxYlsxOzkybV1cMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTFtQ3JhY2sgRnJvbSBGb2xsb3dlcnMiKQ0KCXByaW50ICgiXDAzM1sxOzkybVtcMDMzWzE7OTBtNFx4MWJbMTs5Mm1dXDAzM1sxOzkwbT09XDAzM1sxOzkybT4gXDAzM1sxOzkxbUNyYWNrIEZyb20gUGFnZS9Hcm91cC9JRCBQb3N0IikNCglwcmludCAoJ1wwMzNbMTs5Mm1bXDAzM1sxOzkwbTBceDFiWzE7OTNtXVwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+ICBcMDMzWzE7OTFtQmFjaycpDQoJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJaW5kaWFhMigpDQpkZWYgaW5kaWFhMigpOg0KCXNlbGVjdCA9IHJhd19pbnB1dCgiXG7ilbDilIDinqMgIikNCglpZD1bXQ0KCW9rcz1bXQ0KCWNwcz1bXQ0KCWlmIHNlbGVjdD09IjEiOg0KCQlvcy5zeXN0ZW0oImNsZWFyIikNCgkJcHJpbnQgbG9nbw0KCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS9tZS9mcmllbmRzP2FjY2Vzc190b2tlbj0iK3Rva2VuLCBoZWFkZXJzPWhlYWRlcikNCgkJeiA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQlmb3IgcyBpbiB6WyJkYXRhIl06DQoJCQl1aWQ9c1snaWQnXQ0KCQkJbmE9c1snbmFtZSddDQoJCQlubT1uYS5yc3BsaXQoIiAiKVswXQ0KCQkJaWQuYXBwZW5kKHVpZCsnfCcrbm0pDQoJZWxpZiBzZWxlY3QgPT0iMiI6DQoJCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCQlwcmludCBsb2dvDQoJCWlkdCA9IHJhd19pbnB1dCgiXDAzM1sxOzk3bVsrXVwwMzNbMTs5M20gSW5wdXQgSUQvVXNlcm5hbWUgOlwwMzNbMTs5Nm0gIikNCgkJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCQlwcmludCBsb2dvDQoJCXRyeToNCgkJCXIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyI/YWNjZXNzX3Rva2VuPSIrdG9rZW4sIGhlYWRlcnM9aGVhZGVyKQ0KCQkJcSA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQkJcHJpbnQoIlwwMzNbMTs5MW1bXHgxYlsxOzkybeKck1wwMzNbMTs5MW1dXHgxYlsxOzkzbSBBY2NvdW50IE5hbWVcMDMzWzE7OTFtIDpceDFiWzE7OTJtICIrcVsibmFtZSJdKQ0KCQlleGNlcHQgS2V5RXJyb3I6DQoJCQlwcmludCgnXG5bIV0gRXJyb3IgNDA0IC4gSUQgTGluayAnK2lkdCsnIEhhdmUgUHJpdmFjeSBPbiBGcmllbmRsaXN0IE9SIElTIE5vdCBWYWxpZCcpDQoJCQlyYXdfaW5wdXQoIlxuUHJlc3MgRW50ZXIgVG8gQmFjayAiKQ0KCQkJaW5kaWFhKCkNCgkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIi9mcmllbmRzP2FjY2Vzc190b2tlbj0iK3Rva2VuLCBoZWFkZXJzPWhlYWRlcikNCgkJeiA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQlmb3IgaSBpbiB6WyJkYXRhIl06DQoJCQl1aWQ9aVsnaWQnXQ0KCQkJbmE9aVsnbmFtZSddDQoJCQlubT1uYS5yc3BsaXQoIiAiKVswXQ0KCQkJaWQuYXBwZW5kKHVpZCsnfCcrbm0pDQoJZWxpZiBzZWxlY3QgPT0iMyI6DQoJCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCQlwcmludCBsb2dvDQoJCWlkdCA9IHJhd19pbnB1dCgiXDAzM1sxOzk3bVsrXVwwMzNbMTs5M20gSW5wdXQgSUQvVXNlcm5hbWUgOlwwMzNbMTs5Nm0gIikNCgkJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCQlwcmludCBsb2dvDQoJCXRyeToNCgkJCXIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyI/YWNjZXNzX3Rva2VuPSIrdG9rZW4sIGhlYWRlcnM9aGVhZGVyKQ0KCQkJcSA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQkJcHJpbnQoIlwwMzNbMTs5MW1bXHgxYlsxOzkybeKck1wwMzNbMTs5MW1dXHgxYlsxOzkzbSBBY2NvdW50IE5hbWVcMDMzWzE7OTFtIDpceDFiWzE7OTJtICIrcVsibmFtZSJdKQ0KCQlleGNlcHQgS2V5RXJyb3I6DQoJCQlwcmludCgnXG5bIV0gRXJyb3IgNDA0IC4gSUQgTGluayAnK2lkdCsnIERvbm90IEhhdmUgRm9sbG93ZXJzIE9SIElTIE5vdCBWYWxpZCcpDQoJCQlyYXdfaW5wdXQoIlxuUHJlc3MgRW50ZXIgVG8gQmFjayAiKQ0KCQkJY3JhY2soKQ0KCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiL3N1YnNjcmliZXJzP2FjY2Vzc190b2tlbj0iK3Rva2VuKyImbGltaXQ9NTAwMCIsIGhlYWRlcnM9aGVhZGVyKQ0KCQl6ID0ganNvbi5sb2FkcyhyLnRleHQpDQoJCWZvciBpIGluIHpbImRhdGEiXToNCgkJCXVpZD1pWydpZCddDQoJCQluYT1pWyduYW1lJ10NCgkJCW5tPW5hLnJzcGxpdCgiICIpWzBdDQoJCQlpZC5hcHBlbmQodWlkKyd8JytubSkNCgllbGlmIHNlbGVjdCA9PSI0IjoNCgkJb3Muc3lzdGVtKCJjbGVhciIpDQoJCXByaW50IGxvZ28NCgkJaWR0ID0gcmF3X2lucHV0KCJcMDMzWzE7OTdtWytdXDAzM1sxOzkzbSBJbnB1dCBJRC9Vc2VybmFtZSA6XDAzM1sxOzk2bSAiKQ0KCQlwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCgkJb3Muc3lzdGVtKCJjbGVhciIpDQoJCXByaW50IGxvZ28NCgkJdHJ5Og0KCQkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIi9saWtlcz9saW1pdD05OTk5OTk5JmFjY2Vzc190b2tlbj0iK3Rva2VuLCBoZWFkZXJzPWhlYWRlcikNCgkJCXogPSBqc29uLmxvYWRzKHIudGV4dCkNCgkJCWZvciBpIGluIHpbImRhdGEiXToNCgkJCQl1aWQ9aVsnaWQnXQ0KCQkJCW5hPWlbJ25hbWUnXQ0KCQkJCW5tPW5hLnJzcGxpdCgiICIpWzBdDQoJCQkJaWQuYXBwZW5kKHVpZCsnfCcrbm0pDQoJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCXByaW50KCdcblshXSBFcnJvciA0MDQgLiBQb3N0IElEICcraWR0KycgTWF5IE5vdCBCZSBWYWxpZCcpDQoJCQlyYXdfaW5wdXQoIlxuUHJlc3MgRW50ZXIgVG8gQmFjayIpDQoJCQlpbmRpYWEoKQ0KCSAgIA0KCWVsaWYgc2VsZWN0ID09IjAiOg0KCQltZW51KCkNCgllbHNlOg0KCQlwcmludCAoIlshXSBQbGVhc2UgU2VsZWN0IGEgVmFsaWQgT3B0aW9uIikNCgkJYmFuZ2xhMigpDQoJcHJpbnQoIlwwMzNbMTs5N21b4pyTXVwwMzNbMTs5N20gVG90YWwgSURzIDpcMDMzWzE7OTdtICIrc3RyKGxlbihpZCkpKQ0KCXRpbWUuc2xlZXAoMC41KQ0KCXByaW50KCJcMDMzWzE7OTdtW1x4MWJbMTs5M23inJNcMDMzWzE7OTdtXVwwMzNbMTs5Mm0gVGhlIFByb2Nlc3MgSXMgUnVubmluZyBJbiBCYWNrZ3JvdW5kXDAzM1sxOzBtIikNCgl0aW1lLnNsZWVwKDAuNSkNCglwcmludCgiXDAzM1sxOzk3bVtceDFiWzE7OTNt4pyTXDAzM1sxOzk3bV1cMDMzWzE7OTJtIFRvIFN0b3AgUHJvY2VzcyBQcmVzcyBDVFJMIFRoZW4gUHJlc3NcMDMzWzE7OTFtIHpcMDMzWzE7MG0iKQ0KCXRpbWUuc2xlZXAoMC41KQ0KCXByaW50KCJcMDMzWzE7OTdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQ0KCQ0KCQ0KCQ0KICAgICAgICBkZWYgbWFpbihhcmcpOg0KCQl1c2VyPWFyZw0KCQl1aWQsbmFtZT11c2VyLnNwbGl0KCJ8IikNCgkJdHJ5Og0KCQkgICAgcGFzczE9bmFtZSsiMTIzIg0KCQkgICAgcSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIgKyB1aWQgKyAiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iICsgcGFzczEgKyAiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJICAgIGQ9anNvbi5sb2FkcyhxKQ0KCQkgICAgaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIGRbJ2Vycm9yX21zZyddOg0KCQkgICAgICAgIHByaW50KCJcMDMzWzE7OTNtW1wwMzNbMTs5N21DaGVja1wwMzNbMTs5MW0tXDAzM1sxOzk3bXBvaW50XDAzM1sxOzkzbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3MxKyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICBjcD1vcGVuKCJjcC50eHQiLCJhIikNCgkJICAgICAgICBjcC53cml0ZSh1aWQrIiB8ICIrcGFzczErIlxuIikNCgkJICAgICAgICBjcC5jbG9zZSgpDQoJCSAgICAgICAgY3BzLmFwcGVuZCh1aWQpDQoJCSAgICBlbHNlOg0KCQkgICAgCWlmICJhY2Nlc3NfdG9rZW4iIGluIGQ6DQoJCSAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTFtW1wwMzNbMTs5Mm1TdWNjZXNzZnVsXDAzM1sxOzkxbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3MxKyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgb2s9b3Blbigib2sudHh0IiwiYSIpDQoJCSAgICAgICAgICAgIG9rLndyaXRlKHVpZCsiIHwgIitwYXNzMSsiXG4iKQ0KCQkgICAgICAgICAgICBvay5jbG9zZSgpDQoJCSAgICAgICAgICAgIG9rcy5hcHBlbmQodWlkKQ0KCQkgICAgICAgIGVsc2U6DQoJCSAgICAgICAgICAgIHBhc3MyPW5hbWUrIjEyMzQiDQoJCSAgICAgICAgICAgIHEgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iICsgdWlkICsgIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IiArIHBhc3MyICsgIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIsIGhlYWRlcnM9aGVhZGVyKS50ZXh0DQoJCSAgICAgICAgICAgIGQ9anNvbi5sb2FkcyhxKQ0KCQkgICAgICAgICAgICBpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gZFsnZXJyb3JfbXNnJ106DQoJCSAgICAgICAgICAgICAgICBwcmludCgiXDAzM1sxOzkzbVtcMDMzWzE7OTdtQ2hlY2tcMDMzWzE7OTFtLVwwMzNbMTs5N21wb2ludFwwMzNbMTs5M21dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzMisiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICBjcD1vcGVuKCJjcC50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgIGNwLndyaXRlKHVpZCsiIHwgIitwYXNzMisiXG4iKQ0KCQkgICAgICAgICAgICAgICAgY3AuY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgY3BzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgICAgIGVsc2U6DQoJCSAgICAgICAgICAgICAgICBpZiAnYWNjZXNzX3Rva2VuJyBpbiBkOg0KCQkgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTFtW1wwMzNbMTs5Mm1TdWNjZXNzZnVsXDAzM1sxOzkxbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3MyKyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgICAgICBvaz1vcGVuKCJvay50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICBvay53cml0ZSh1aWQrIiB8ICIrcGFzczIrIlxuIikNCgkJICAgICAgICAgICAgICAgICAgICBvay5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICAgICAgb2tzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgICAgICAgICBlbHNlOg0KCQkgICAgICAgICAgICAgICAgICAgIHBhc3MzPW5hbWUrIjEyMzQ1Ig0KCQkgICAgICAgICAgICAgICAgICAgIHEgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iICsgdWlkICsgIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IiArIHBhc3MzICsgIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIsIGhlYWRlcnM9aGVhZGVyKS50ZXh0DQoJCSAgICAgICAgICAgICAgICAgICAgZD1qc29uLmxvYWRzKHEpDQoJCSAgICAgICAgICAgICAgICAgICAgaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIGRbJ2Vycm9yX21zZyddOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1sxOzkzbVtcMDMzWzE7OTdtQ2hlY2tcMDMzWzE7OTFtLVwwMzNbMTs5N21wb2ludFwwMzNbMTs5M21dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzMysiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgIGNwPW9wZW4oImNwLnR4dCIsImEiKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICBjcC53cml0ZSh1aWQrIiB8ICIrcGFzczMrIlxuIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgY3AuY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKHVpZCkNCgkJICAgICAgICAgICAgICAgICAgICBlbHNlOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICBpZiAnYWNjZXNzX3Rva2VuJyBpbiBkOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5MW1bXDAzM1sxOzkybVN1Y2Nlc3NmdWxcMDMzWzE7OTFtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczMrIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2s9b3Blbigib2sudHh0IiwiYSIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICBvay53cml0ZSh1aWQrIiB8ICIrcGFzczMrIlxuIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rLmNsb3NlKCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rcy5hcHBlbmQodWlkKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzczQ9IjU1NjY3NyINCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIHEgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iICsgdWlkICsgIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IiArIHBhc3M0ICsgIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIsIGhlYWRlcnM9aGVhZGVyKS50ZXh0DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICBkPWpzb24ubG9hZHMocSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBkWydlcnJvcl9tc2cnXToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1sxOzk0bVtcMDMzWzE7OTdtQ2hlY2stUG9pbnRcMDMzWzE7OTRtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczQrIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwPW9wZW4oImNwLnR4dCIsImEiKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwLndyaXRlKHVpZCsiIHwgIitwYXNzNCsiXG4iKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwLmNsb3NlKCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKHVpZCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ2FjY2Vzc190b2tlbicgaW4gZDoNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5MW1bXDAzM1sxOzkybVN1Y2Nlc3NmdWxcMDMzWzE7OTFtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczQrIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvaz1vcGVuKCJvay50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2sud3JpdGUodWlkKyIgfCAiK3Bhc3M0KyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rLmNsb3NlKCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2tzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFzczU9IjEwMjAzMCINCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIgKyB1aWQgKyAiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iICsgcGFzczUgKyAiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZD1qc29uLmxvYWRzKHEpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBkWydlcnJvcl9tc2cnXToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTNtW1wwMzNbMTs5N21DaGVja1wwMzNbMTs5MW0tXDAzM1sxOzk3bXBvaW50XDAzM1sxOzkzbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3M1KyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwPW9wZW4oImNwLnR4dCIsImEiKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3Aud3JpdGUodWlkKyIgfCAiK3Bhc3M1KyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcC5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKHVpZCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICdhY2Nlc3NfdG9rZW4nIGluIGQ6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5NG1bXDAzM1sxOzkybVN1Y2Nlc3NmdWxsXDAzM1sxOzk0bV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3M1KyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvaz1vcGVuKCJvay50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvay53cml0ZSh1aWQrIiB8ICIrcGFzczUrIlxuIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvay5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2tzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3M2PW5hbWUrIjEyMzQ1NiINCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBxID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IiArIHVpZCArICImbG9jYWxlPWVuX1VTJnBhc3N3b3JkPSIgKyBwYXNzNiArICImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ9anNvbi5sb2FkcyhxKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBkWydlcnJvcl9tc2cnXToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTNtW1wwMzNbMTs5N21DaGVja1wwMzNbMTs5MW0tXDAzM1sxOzk3bXBvaW50XDAzM1sxOzkzbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3M2KyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwPW9wZW4oImNwLnR4dCIsImEiKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3Aud3JpdGUodWlkKyIgfCAiK3Bhc3M2KyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcC5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKHVpZCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAnYWNjZXNzX3Rva2VuJyBpbiBkOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5MW1bXDAzM1sxOzkybVN1Y2Nlc3NmdWxcMDMzWzE7OTFtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczYrIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2s9b3Blbigib2sudHh0IiwiYSIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvay53cml0ZSh1aWQrIiB8ICIrcGFzczYrIlxuIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rLmNsb3NlKCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rcy5hcHBlbmQodWlkKQ0KDQoJCQkJCQkJCQkNCgkJCQkJCQkJCQkJCQkJCQ0KCQlleGNlcHQ6DQoJCQlwYXNzDQoJCQ0KCXAgPSBUaHJlYWRQb29sKDMwKQ0KCXAubWFwKG1haW4sIGlkKQ0KCXByaW50KCJcMDMzWzE7OTdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQ0KCXByaW50ICgnXDAzM1sxOzk3bVvinJNdXDAzM1sxOzkybSBQcm9jZXNzIEhhcyBCZWVuIENvbXBsZXRlZCcpDQoJcHJpbnQoJ1wwMzNbMTs5N21bXHgxYlsxOzkzbeKck1x4MWJbMTs5N21dXDAzM1sxOzkybSBUb3RhbFx4MWJbMTs5M20gQ1AgXDAzM1sxOzkxbS9cMDMzWzE7OTJtT0tcMDMzWzE7OTNtOlx4MWJbMTs5N21cMDMzWzA7OTdtICAnK3N0cihsZW4oY3BzKSkrJy9cMDMzWzszMm0gXDAzM1swOzk3bScrc3RyKGxlbihva3MpKSkNCglwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCglkb3duKCkNCmRlZiBkb3duKCk6DQogICAgZG93ID0gcmF3X2lucHV0KCJcMDMzWzE7OTdtWz9dXDAzM1sxOzkzbSBEbyBZb291IFdhbnQgVG8gRG93bmxvYWQgQ3AgRmlsZT9cMDMzWzE7OTdtIChZZXMvTm8pICIpDQogICAgaWYgZG93ID09InllcyIgb3IgZG93ID09InkiOg0KICAgICAgICBvcy5zeXN0ZW0oImNsZWFyIikNCiAgICAgICAgcHJpbnQgbG9nbw0KICAgICAgICBkb3dubG9hZCgpDQogICAgICAgIHByaW50KCJcblwwMzNbMTs5N21bIV1cMDMzWzE7OTNtIFBsZWFzZSBHaXZlIFN0b3JhZ2UgUGVybWlzc2lvbiBJZiBBc2siKQ0KICAgICAgICBvcy5zeXN0ZW0oInRlcm11eC1zZXR1cC1zdG9yYWdlIikNCiAgICAgICAgb3Muc3lzdGVtKCJjcCBjcC50eHQgL3NkY2FyZCIpDQogICAgICAgIHByaW50KCdcMDMzWzE7OTNtW+Kck11cMDMzWzE7OTJtIEZpbGUgRG93bmxvYWRlZCBTdWNjZXNzZnVsbHknKQ0KICAgICAgICBwcmludCgiXDAzM1sxOzkzbVvinJNdXDAzM1sxOzkzbSBQbGVhc2UgT3BlbiBZb3VyIEludGVybmFsIFN0b3JhZ2UgYW5kIFJlbmFtZSBUaGUgRmlsZSIpDQogICAgICAgIHJhd19pbnB1dCgiXDAzM1sxOzk3bVByZXNzIEVudGVyIFRvIFJldHVybiBJbiBNYWluIE1lbnUgIikNCiAgICAgICAgY3JhY2soKQ0KICAgIGVsaWYgZG93ID09Im5vIiBvciBkb3c9PSJuIjoNCiAgICAgICAgY3JhY2soKQ0KICAgIGVsc2U6DQogICAgICAgIHByaW50KCJcMDMzWzE7OTFtWyFdIFBsZWFzZSBTZWxlY3QgYSBWYWxpZCBPcHRpb24gIikNCiAgICAgICAgZG93bigpDQoJCQ0KZGVmIGhhY2tlcigpOg0KICAgIG9zLnN5c3RlbSgiY2xlYXIiKQ0KICAgIHByaW50IGxvZ28NCiAgICBvcy5zeXN0ZW0oInB5dGhvbjMgLmxvYWRpbmcubWQiKQ0KICAgIHRpbWUuc2xlZXAoMSkNCiAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICBwcmludCBsb2dvDQogICAgcHJpbnQoIlwwMzNbMTs5N21bMV1cMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5NW1SYW5kb20gSW5kb25pc2lhIEZyaWVubGlzdCBDbG9uaW5nIikNCiAgICBwcmludCgiXDAzM1sxOzk3bVswXVwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk1bUJhY2siKQkNCiAgICB0aW1lLnNsZWVwKDAuNSkNCiAgICBwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCiAgICBoYWNrZXJfbWFuKCkNCmRlZiBoYWNrZXJfbWFuKCk6DQogICAgb3B0aW9uID0gcmF3X2lucHV0KCJcbuKVsOKUgOKeoyAiKQ0KICAgIGlmIG9wdGlvbiA9PSIxIjoNCiAgICAgICAgaW5kbygpDQogICAgaWYgb3B0aW9uID09IjAiOgkNCiAgICAgICAgICBtZW51KCkNCiAgICBlbHNlOg0KICAgICAgICAgIHByaW50ICgiWyFdIFBsZWFzZSBTZWxlY3QgYSBWYWxpZCBPcHRpb24iKQ0KICAgICAgICAgIGhhY2tlcl9tYW4oKQkJDQoJCSAgDQpkZWYgaW5kbygpOg0KCWdsb2JhbCB0b2tlbg0KCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCXRyeToNCgkJdG9rZW49b3BlbigiLmxvZ2luLnR4dCIsInIiKS5yZWFkKCkNCglleGNlcHQgSU9FcnJvcjoNCgkJcHJpbnQoIlshXSBFcnJvciA0MDQgLiBUb2tlbiBOb3QgRm91bmQiKQ0KCQlvcy5zeXN0ZW0oInJtIC1yZiAubG9naW4udHh0IikNCgkJdGltZS5zbGVlcCgxKQ0KCQlsb2dpbigpDQoJb3Muc3lzdGVtKCJjbGVhciIpDQoJcHJpbnQgbG9nbw0KCXByaW50ICgiXDAzM1sxOzk3bVsxXVwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+IFwwMzNbMTs5N21DcmFjayBGcm9tIEZyaWVuZCBMaXN0IikNCglwcmludCAoIlwwMzNbMTs5N21bMl1cMDMzWzE7OTBtPT1cMDMzWzE7OTJtPiBcMDMzWzE7OTdtQ3JhY2sgRnJvbSBQdWJsaWMgSUQiKQ0KCXByaW50ICgnXDAzM1sxOzk3bVswXVwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+ICBcMDMzWzE7OTdtQmFjaycpDQoJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJaW5kbzIoKQ0KZGVmIGluZG8yKCk6DQoJc2VsZWN0ID0gcmF3X2lucHV0KCJcbuKVsOKUgOKeoyAiKQ0KCWlkPVtdDQoJb2tzPVtdDQoJY3BzPVtdDQoJaWYgc2VsZWN0PT0iMSI6DQoJCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCQlwcmludCBsb2dvDQoJCXIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lL2ZyaWVuZHM/YWNjZXNzX3Rva2VuPSIrdG9rZW4sIGhlYWRlcnM9aGVhZGVyKQ0KCQl6ID0ganNvbi5sb2FkcyhyLnRleHQpDQoJCWZvciBzIGluIHpbImRhdGEiXToNCgkJCXVpZD1zWydpZCddDQoJCQluYT1zWyduYW1lJ10NCgkJCW5tPW5hLnJzcGxpdCgiICIpWzBdDQoJCQlpZC5hcHBlbmQodWlkKyd8JytubSkNCgllbGlmIHNlbGVjdCA9PSIyIjoNCgkJb3Muc3lzdGVtKCJjbGVhciIpDQoJCXByaW50IGxvZ28NCgkJaWR0ID0gcmF3X2lucHV0KCJcMDMzWzE7OTdtWytdXDAzM1sxOzkzbSBJbnB1dCBJRCA6XDAzM1sxOzk2bSAiKQ0KCQlwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCgkJb3Muc3lzdGVtKCJjbGVhciIpDQoJCXByaW50IGxvZ28NCgkJdHJ5Og0KCQkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIj9hY2Nlc3NfdG9rZW49Iit0b2tlbiwgaGVhZGVycz1oZWFkZXIpDQoJCQlxID0ganNvbi5sb2FkcyhyLnRleHQpDQoJCQlwcmludCgiXDAzM1sxOzkxbVtceDFiWzE7OTJt4pyTXDAzM1sxOzkxbV1ceDFiWzE7OTNtIEFjY291bnQgTmFtZVwwMzNbMTs5MW0gOlx4MWJbMTs5Mm0gIitxWyJuYW1lIl0pDQoJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCXByaW50KCdcblshXSBFcnJvciA0MDQgLiBJRCBMaW5rICcraWR0KycgSGF2ZSBQcml2YWN5IE9uIEZyaWVuZGxpc3QgT1IgSVMgTm90IFZhbGlkJykNCgkJCXJhd19pbnB1dCgiXG5QcmVzcyBFbnRlciBUbyBCYWNrICIpDQoJCQlpbmRvKCkNCgkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIi9mcmllbmRzP2FjY2Vzc190b2tlbj0iK3Rva2VuLCBoZWFkZXJzPWhlYWRlcikNCgkJeiA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQlmb3IgaSBpbiB6WyJkYXRhIl06DQoJCQl1aWQ9aVsnaWQnXQ0KCQkJbmE9aVsnbmFtZSddDQoJCQlubT1uYS5yc3BsaXQoIiAiKVswXQ0KCQkJaWQuYXBwZW5kKHVpZCsnfCcrbm0pDQoJICAgDQoJZWxpZiBzZWxlY3QgPT0iMCI6DQoJCW1lbnUoKQ0KCWVsc2U6DQoJCXByaW50ICgiWyFdIFBsZWFzZSBTZWxlY3QgYSBWYWxpZCBPcHRpb24iKQ0KCQlpbmRvMigpDQoJcHJpbnQoIlwwMzNbMTs5N21b4pyTXVwwMzNbMTs5N20gVG90YWwgSURzIDpcMDMzWzE7OTdtICIrc3RyKGxlbihpZCkpKQ0KCXRpbWUuc2xlZXAoMC41KQ0KCXByaW50KCJcMDMzWzE7OTdtW1x4MWJbMTs5M23inJNcMDMzWzE7OTdtXVwwMzNbMTs5Mm0gVGhlIFByb2Nlc3MgSXMgUnVubmluZyBJbiBCYWNrZ3JvdW5kXDAzM1sxOzBtIikNCgl0aW1lLnNsZWVwKDAuNSkNCglwcmludCgiXDAzM1sxOzk3bVtceDFiWzE7OTNt4pyTXDAzM1sxOzk3bV1cMDMzWzE7OTJtIFRvIFN0b3AgUHJvY2VzcyBQcmVzcyBDVFJMIFRoZW4gUHJlc3NcMDMzWzE7OTFtIHpcMDMzWzE7MG0iKQ0KCXRpbWUuc2xlZXAoMC41KQ0KCXByaW50KCJcMDMzWzE7OTdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iKQ0KCQ0KCQ0KICAgICAgICBkZWYgbWFpbihhcmcpOg0KCQl1c2VyPWFyZw0KCQl1aWQsbmFtZT11c2VyLnNwbGl0KCJ8IikNCgkJdHJ5Og0KCQkgICAgcGFzczE9bmFtZSsiMTIzIg0KCQkgICAgcSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIgKyB1aWQgKyAiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iICsgcGFzczEgKyAiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJICAgIGQ9anNvbi5sb2FkcyhxKQ0KCQkgICAgaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIGRbJ2Vycm9yX21zZyddOg0KCQkgICAgICAgIHByaW50KCJcMDMzWzE7OTNtW1wwMzNbMTs5N21DaGVja1wwMzNbMTs5MW0tXDAzM1sxOzk3bXBvaW50XDAzM1sxOzkzbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3MxKyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICBjcD1vcGVuKCJjcC50eHQiLCJhIikNCgkJICAgICAgICBjcC53cml0ZSh1aWQrIiB8ICIrcGFzczErIlxuIikNCgkJICAgICAgICBjcC5jbG9zZSgpDQoJCSAgICAgICAgY3BzLmFwcGVuZCh1aWQpDQoJCSAgICBlbHNlOg0KCQkgICAgCWlmICJhY2Nlc3NfdG9rZW4iIGluIGQ6DQoJCSAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTFtW1wwMzNbMTs5Mm1TdWNjZXNzZnVsXDAzM1sxOzkxbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3MxKyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgb2s9b3Blbigib2sudHh0IiwiYSIpDQoJCSAgICAgICAgICAgIG9rLndyaXRlKHVpZCsiIHwgIitwYXNzMSsiXG4iKQ0KCQkgICAgICAgICAgICBvay5jbG9zZSgpDQoJCSAgICAgICAgICAgIG9rcy5hcHBlbmQodWlkKQ0KCQkgICAgICAgIGVsc2U6DQoJCSAgICAgICAgICAgIHBhc3MyPW5hbWUrIjc4NiINCgkJICAgICAgICAgICAgcSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIgKyB1aWQgKyAiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iICsgcGFzczIgKyAiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJICAgICAgICAgICAgZD1qc29uLmxvYWRzKHEpDQoJCSAgICAgICAgICAgIGlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBkWydlcnJvcl9tc2cnXToNCgkJICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTNtW1wwMzNbMTs5N21DaGVja1wwMzNbMTs5MW0tXDAzM1sxOzk3bXBvaW50XDAzM1sxOzkzbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3MyKyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgIGNwPW9wZW4oImNwLnR4dCIsImEiKQ0KCQkgICAgICAgICAgICAgICAgY3Aud3JpdGUodWlkKyIgfCAiK3Bhc3MyKyJcbiIpDQoJCSAgICAgICAgICAgICAgICBjcC5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKHVpZCkNCgkJICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgIGlmICdhY2Nlc3NfdG9rZW4nIGluIGQ6DQoJCSAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5MW1bXDAzM1sxOzkybVN1Y2Nlc3NmdWxcMDMzWzE7OTFtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczIrIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICAgICAgICAgIG9rPW9wZW4oIm9rLnR4dCIsImEiKQ0KCQkgICAgICAgICAgICAgICAgICAgIG9rLndyaXRlKHVpZCsiIHwgIitwYXNzMisiXG4iKQ0KCQkgICAgICAgICAgICAgICAgICAgIG9rLmNsb3NlKCkNCgkJICAgICAgICAgICAgICAgICAgICBva3MuYXBwZW5kKHVpZCkNCgkJICAgICAgICAgICAgICAgIGVsc2U6DQoJCSAgICAgICAgICAgICAgICAgICAgcGFzczM9bmFtZSsiMTIzNDUiDQoJCSAgICAgICAgICAgICAgICAgICAgcSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIgKyB1aWQgKyAiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iICsgcGFzczMgKyAiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJICAgICAgICAgICAgICAgICAgICBkPWpzb24ubG9hZHMocSkNCgkJICAgICAgICAgICAgICAgICAgICBpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gZFsnZXJyb3JfbXNnJ106DQoJCSAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTNtW1wwMzNbMTs5N21DaGVja1wwMzNbMTs5MW0tXDAzM1sxOzk3bXBvaW50XDAzM1sxOzkzbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3MzKyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgY3A9b3BlbigiY3AudHh0IiwiYSIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgIGNwLndyaXRlKHVpZCsiIHwgIitwYXNzMysiXG4iKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICBjcC5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgIGNwcy5hcHBlbmQodWlkKQ0KCQkgICAgICAgICAgICAgICAgICAgIGVsc2U6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgIGlmICdhY2Nlc3NfdG9rZW4nIGluIGQ6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1sxOzkxbVtcMDMzWzE7OTJtU3VjY2Vzc2Z1bFwwMzNbMTs5MW1dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzMysiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICBvaz1vcGVuKCJvay50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rLndyaXRlKHVpZCsiIHwgIitwYXNzMysiXG4iKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2suY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2tzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzND0iS29udG9sIg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgcSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIgKyB1aWQgKyAiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iICsgcGFzczQgKyAiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ9anNvbi5sb2FkcyhxKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIGRbJ2Vycm9yX21zZyddOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTRtW1wwMzNbMTs5N21DaGVjay1Qb2ludFwwMzNbMTs5NG1dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzNCsiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3A9b3BlbigiY3AudHh0IiwiYSIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3Aud3JpdGUodWlkKyIgfCAiK3Bhc3M0KyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3AuY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwcy5hcHBlbmQodWlkKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAnYWNjZXNzX3Rva2VuJyBpbiBkOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1sxOzkxbVtcMDMzWzE7OTJtU3VjY2Vzc2Z1bFwwMzNbMTs5MW1dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzNCsiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rPW9wZW4oIm9rLnR4dCIsImEiKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvay53cml0ZSh1aWQrIiB8ICIrcGFzczQrIlxuIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2suY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBva3MuYXBwZW5kKHVpZCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzNT1uYW1lKyIxMDIwMzAiDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHEgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iICsgdWlkICsgIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IiArIHBhc3M1ICsgIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIsIGhlYWRlcnM9aGVhZGVyKS50ZXh0DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ9anNvbi5sb2FkcyhxKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gZFsnZXJyb3JfbXNnJ106DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1sxOzkzbVtcMDMzWzE7OTdtQ2hlY2tcMDMzWzE7OTFtLVwwMzNbMTs5N21wb2ludFwwMzNbMTs5M21dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzNSsiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcD1vcGVuKCJjcC50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwLndyaXRlKHVpZCsiIHwgIitwYXNzNSsiXG4iKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3AuY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3BzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAnYWNjZXNzX3Rva2VuJyBpbiBkOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTRtW1wwMzNbMTs5Mm1TdWNjZXNzZnVsbFwwMzNbMTs5NG1dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzNSsiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2s9b3Blbigib2sudHh0IiwiYSIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2sud3JpdGUodWlkKyIgfCAiK3Bhc3M1KyJcbiIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2suY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rcy5hcHBlbmQodWlkKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzNj0iNTU2Njc3Ig0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHEgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iICsgdWlkICsgIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IiArIHBhc3M2ICsgIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIsIGhlYWRlcnM9aGVhZGVyKS50ZXh0DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZD1qc29uLmxvYWRzKHEpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIGRbJ2Vycm9yX21zZyddOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5M21bXDAzM1sxOzk3bUNoZWNrXDAzM1sxOzkxbS1cMDMzWzE7OTdtcG9pbnRcMDMzWzE7OTNtXVwwMzNbMTs5N20gIit1aWQrIlwwMzNbMTs5MG09PVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrcGFzczYrIlwwMzNbMTs5MG09XDAzM1sxOzkybT5cMDMzWzE7OTdtIituYW1lKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3A9b3BlbigiY3AudHh0IiwiYSIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcC53cml0ZSh1aWQrIiB8ICIrcGFzczYrIlxuIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwLmNsb3NlKCkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNwcy5hcHBlbmQodWlkKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICdhY2Nlc3NfdG9rZW4nIGluIGQ6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1sxOzkxbVtcMDMzWzE7OTJtU3VjY2Vzc2Z1bFwwMzNbMTs5MW1dXDAzM1sxOzk3bSAiK3VpZCsiXDAzM1sxOzkwbT09XDAzM1sxOzkybT5cMDMzWzE7OTdtIitwYXNzNisiXDAzM1sxOzkwbT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK25hbWUpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvaz1vcGVuKCJvay50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rLndyaXRlKHVpZCsiIHwgIitwYXNzNisiXG4iKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2suY2xvc2UoKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2tzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzNz0iU2F5YW5nIg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPSIgKyB1aWQgKyAiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iICsgcGFzczcgKyAiJnNkaz1pb3MmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmc2lnPTNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2IiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ9anNvbi5sb2FkcyhxKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIGRbJ2Vycm9yX21zZyddOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTNtW1wwMzNbMTs5N21DaGVja1wwMzNbMTs5MW0tXDAzM1sxOzk3bXBvaW50XDAzM1sxOzkzbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3M3KyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcD1vcGVuKCJjcC50eHQiLCJhIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcC53cml0ZSh1aWQrIiB8ICIrcGFzczcrIlxuIikNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcC5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3BzLmFwcGVuZCh1aWQpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICdhY2Nlc3NfdG9rZW4nIGluIGQ6DQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTFtW1wwMzNbMTs5Mm1TdWNjZXNzZnVsXDAzM1sxOzkxbV1cMDMzWzE7OTdtICIrdWlkKyJcMDMzWzE7OTBtPT1cMDMzWzE7OTJtPlwwMzNbMTs5N20iK3Bhc3M3KyJcMDMzWzE7OTBtPVwwMzNbMTs5Mm0+XDAzM1sxOzk3bSIrbmFtZSkNCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2s9b3Blbigib2sudHh0IiwiYSIpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rLndyaXRlKHVpZCsiIHwgIitwYXNzNysiXG4iKQ0KCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvay5jbG9zZSgpDQoJCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9rcy5hcHBlbmQodWlkKQ0KCQkJCQkJCQkJDQoJCQkJCQkJCQkJCQkJCQkNCgkJZXhjZXB0Og0KCQkJcGFzcw0KCQkNCglwID0gVGhyZWFkUG9vbCgzMCkNCglwLm1hcChtYWluLCBpZCkNCglwcmludCgiXDAzM1sxOzk3bS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIikNCglwcmludCAoJ1wwMzNbMTs5N21b4pyTXVwwMzNbMTs5Mm0gUHJvY2VzcyBIYXMgQmVlbiBDb21wbGV0ZWQnKQ0KCXByaW50KCdcMDMzWzE7OTdtW1x4MWJbMTs5M23inJNceDFiWzE7OTdtXVwwMzNbMTs5Mm0gVG90YWxceDFiWzE7OTNtIENQIFwwMzNbMTs5MW0vXDAzM1sxOzkybU9LXDAzM1sxOzkzbTpceDFiWzE7OTdtXDAzM1swOzk3bSAgJytzdHIobGVuKGNwcykpKycvXDAzM1s7MzJtIFwwMzNbMDs5N20nK3N0cihsZW4ob2tzKSkpDQoJcHJpbnQoIlwwMzNbMTs5N20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpDQoJZG93bigpDQpkZWYgZG93bigpOg0KICAgIGRvdyA9IHJhd19pbnB1dCgiXDAzM1sxOzk3bVs/XVwwMzNbMTs5M20gRG8gWW9vdSBXYW50IFRvIERvd25sb2FkIENwIEZpbGU/XDAzM1sxOzk3bSAoWWVzL05vKSAiKQ0KICAgIGlmIGRvdyA9PSJ5ZXMiIG9yIGRvdyA9PSJ5IjoNCiAgICAgICAgb3Muc3lzdGVtKCJjbGVhciIpDQogICAgICAgIHByaW50IGxvZ28NCiAgICAgICAgZG93bmxvYWQoKQ0KICAgICAgICBwcmludCgiXG5cMDMzWzE7OTdtWyFdXDAzM1sxOzkzbSBQbGVhc2UgR2l2ZSBTdG9yYWdlIFBlcm1pc3Npb24gSWYgQXNrIikNCiAgICAgICAgb3Muc3lzdGVtKCJ0ZXJtdXgtc2V0dXAtc3RvcmFnZSIpDQogICAgICAgIG9zLnN5c3RlbSgiY3AgY3AudHh0IC9zZGNhcmQiKQ0KICAgICAgICBwcmludCgnXDAzM1sxOzkzbVvinJNdXDAzM1sxOzkybSBGaWxlIERvd25sb2FkZWQgU3VjY2Vzc2Z1bGx5JykNCiAgICAgICAgcHJpbnQoIlwwMzNbMTs5M21b4pyTXVwwMzNbMTs5M20gUGxlYXNlIE9wZW4gWW91ciBJbnRlcm5hbCBTdG9yYWdlIGFuZCBSZW5hbWUgVGhlIEZpbGUiKQ0KICAgICAgICByYXdfaW5wdXQoIlwwMzNbMTs5N21QcmVzcyBFbnRlciBUbyBSZXR1cm4gSW4gTWFpbiBNZW51ICIpDQogICAgICAgIGNyYWNrKCkNCiAgICBlbGlmIGRvdyA9PSJubyIgb3IgZG93PT0ibiI6DQogICAgICAgIGNyYWNrKCkNCiAgICBlbHNlOg0KICAgICAgICBwcmludCgiXDAzM1sxOzkxbVshXSBQbGVhc2UgU2VsZWN0IGEgVmFsaWQgT3B0aW9uICIpDQogICAgICAgIGRvd24oKQ0KCQ0KaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoNCiAgICB0aGVfa2dmKCkNCg0KCg=='))
